{"version":3,"sources":["components/FlexContainer/index.tsx","components/Aside/index.tsx","components/GithubCorner/index.tsx","../../../src/contexts/CurrentSceneContext.ts","../../../src/contexts/KrpanoRendererContext.ts","../../../node_modules/escape-html/index.js","../../../src/utils.ts","../../../src/KrpanoActionProxy.ts","../../../src/components/Krpano.tsx","../../../src/hooks/useKrpano.ts","../../../src/hooks/useEventCallback.ts","../../../src/components/View.tsx","../../../src/components/Scene.tsx","../../../src/components/Hotspot.tsx","../../../src/components/Events.tsx","pages/DynamicHotspot/index.tsx","pages/LoadXML/index.tsx","pages/Multires/index.tsx","pages/SwitchScene/index.tsx","pages/Redux/reducer.ts","pages/Redux/store.ts","pages/Redux/hooks.ts","pages/Redux/api.ts","pages/Redux/App.tsx","pages/Redux/index.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["HStack","className","justifyContent","children","style","VStack","FlexItem","flex","MenuItem","path","exact","match","useRouteMatch","to","Aside","React","window","innerWidth","collapsed","setCollapsed","onToggle","onClick","GithubCorner","href","target","aria-label","rel","viewBox","aria-hidden","d","fill","transformOrigin","CurrentSceneContext","KrpanoRendererContext","matchHtmlRegExp","string","escape","str","exec","html","index","lastIndex","length","charCodeAt","substring","buildKrpanoAction","func","params","p","Logger","enabled","log","buildXML","attributes","Object","key","attrs","tag","child","mapObject","value","obj","mapper","mapEventPropsToJSCall","getString","constructor","name","krpanoRenderer","eventHandlers","this","nexttick","actionStr","val","quote","escapeHTML","buildKrpanoTagSetterActions","get","eventName","selector","handler","filter","e","mapEventsToHandler","Krpano","config","enableLogger","onReadyRef","callbackRef","useEventCallback","onReadyCallback","renderer","setRenderer","krpanoConfig","id","xml","onready","useKrpano","defaultConfig","html5","consolelog","process","Error","currentScene","width","height","View","viewAttrs","useContext","Scene","imageTagAttributes","images","contentImageMeta","asPreview","imgXML","tiledImageWidth","tiledImageHeight","type","tileSize","content","previewUrl","Hotspot","hotspotAttrs","EventSelector","eventsObj","PageDynamicHotspot","useState","hotspots","setHotspots","onAddHotspot","useCallback","ath","atv","onReady","url","map","hs","PageLoadXML","SceneConfig","tilesize","baseindex","PageMultires","currentSceneIndex","setCurrentSceneIndex","sc","idx","fov","fovMin","fovMax","PageSwitchScene","setCurrentScene","handleClick","src","replace","alt","loadPano","createAction","changeCurrentScene","addScene","addHotspot","panoReducer","createReducer","scenes","byId","default","hotspotIds","ids","builder","addCase","state","action","payload","store","configureStore","reducer","useAppSelector","useSelector","StorageKey","DefaultScene","DefaultState","count","ReduxApp","currentState","hotspotCount","hotspotById","dispatch","useDispatch","Promise","resolve","stateStr","localStorage","getItem","JSON","parse","then","pano","onSave","appState","setItem","stringify","alert","onAddScene","v4","Fragment","scene","PageRedux","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a556fd2.chunk.js","sourcesContent":["import * as React from 'react';\nimport { CSSProperties } from 'react';\n\nimport './index.css';\n\ninterface FlexContainerProps {\n    className?: string;\n    justifyContent?: CSSProperties['justifyContent'];\n}\n\nexport const HStack: React.FC<FlexContainerProps> = ({ className = '', justifyContent, children }) => (\n    <div className={`flex-container h-stack ${className}`} style={{ justifyContent }}>\n        {children}\n    </div>\n);\n\nexport const VStack: React.FC<FlexContainerProps> = ({ className = '', justifyContent, children }) => (\n    <div className={`flex-container v-stack ${className}`} style={{ justifyContent }}>\n        {children}\n    </div>\n);\n\ninterface ItemProps {\n    flex?: CSSProperties['flex'];\n}\n\nexport const FlexItem: React.FC<ItemProps> = ({ flex, children }) => (\n    <div className=\"flex-item\" style={{ flex }}>\n        {children}\n    </div>\n);\n","import * as React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { FlexItem, VStack } from '../FlexContainer';\n\nimport './index.css';\n\ninterface MenuItemProps {\n    children: string;\n    path: string;\n    exact?: boolean;\n}\n\nconst MenuItem: React.FC<MenuItemProps> = ({ children, path, exact }) => {\n    const match = useRouteMatch({\n        path,\n        exact,\n    });\n\n    return (\n        <div className={`aside-menu-item ${match ? 'active' : ''}`}>\n            <Link className={`aside-menu-item-link`} to={path}>\n                {children}\n            </Link>\n        </div>\n    );\n};\n\nconst Aside: React.FC = () => {\n    const [collapsed, setCollapsed] = React.useState(window.innerWidth <= 750);\n    const onToggle = React.useCallback(() => {\n        setCollapsed(!collapsed);\n    }, [collapsed, setCollapsed]);\n\n    return (\n        <aside className={`app-aside ${collapsed ? 'collapsed' : ''}`}>\n            <VStack>\n                <div className=\"aside-title\">React Krpano Examples</div>\n                <VStack className=\"aside-menu\">\n                    <MenuItem path=\"/load-xml\">加载XML</MenuItem>\n                    <MenuItem path=\"/switch-scene\">切换场景</MenuItem>\n                    <MenuItem path=\"/multires\">多分辨率</MenuItem>\n                    <MenuItem path=\"/dynamic-hotspot\">动态热点</MenuItem>\n                    <MenuItem path=\"/redux\">Redux</MenuItem>\n                </VStack>\n                <div className=\"aside-toggle-bar\" onClick={onToggle}>\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </div>\n            </VStack>\n        </aside>\n    );\n};\n\nexport default Aside;\n","import * as React from 'react';\n\nimport './index.css';\n\ninterface GithubCornerProps {}\n\nconst GithubCorner: React.FC<GithubCornerProps> = () => (\n    <a\n        href=\"https://github.com/0xLLLLH/react-krpano-examples\"\n        target=\"_blank\"\n        className=\"github-corner\"\n        aria-label=\"View source on Github\"\n        rel=\"noreferrer\"\n    >\n        <svg viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n            <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n            <path\n                d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n                fill=\"currentColor\"\n                style={{ transformOrigin: '130px 106px' }}\n                className=\"octo-arm\"\n            ></path>\n            <path\n                d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n                fill=\"currentColor\"\n                className=\"octo-body\"\n            ></path>\n        </svg>\n    </a>\n);\n\nexport default GithubCorner;\n","import React from 'react';\n\nexport const CurrentSceneContext = React.createContext<string | null>(null);\n","import React from 'react';\nimport KrpanoActionProxy from '../KrpanoActionProxy';\n\nexport const KrpanoRendererContext = React.createContext<KrpanoActionProxy | null>(null);\n","/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","import escapeHTML from 'escape-html';\n\ntype FuncName = 'set' | 'loadxml' | 'loadscene' | 'addhotspot' | 'removehotspot' | 'nexttick';\n\n/**\n * 执行单个函数\n * @param func 函数名\n * @param params 参数列表\n */\nexport const buildKrpanoAction = (func: FuncName, ...params: Array<string | number | boolean>): string =>\n    `${func}(${params.map(p => `${p}`).join(', ')});`;\n\n/**\n * 动态添加标签用\n * @see https://krpano.com/forum/wbb/index.php?page=Thread&threadID=15873\n */\nexport const buildKrpanoTagSetterActions = (\n    name: string,\n    attrs: Record<string, string | boolean | number | undefined>\n): string =>\n    Object.keys(attrs)\n        .map(key => {\n            const val = attrs[key];\n            key = key.toLowerCase();\n            if (val === undefined) {\n                return '';\n            }\n            // 如果属性值中有双引号，需要改用单引号\n            let quote = '\"';\n            if (val.toString().includes(quote)) {\n                // eslint-disable-next-line quotes\n                quote = \"'\";\n            }\n            if (key === 'style') {\n                return `assignstyle(${name}, ${val});`;\n            }\n            if (typeof val === 'boolean' || typeof val === 'number') {\n                return `set(${name}.${key}, ${val});`;\n            }\n            // content是XML文本，不能转义，因为不涉及用户输入也不需要\n            return `set(${name}.${key}, ${quote}${key === 'content' ? val : escapeHTML(val.toString())}${quote});`;\n        })\n        .filter(str => !!str)\n        .join('');\n\nexport const Logger = {\n    enabled: false,\n    log: (...args: any[]): void => {\n        /* istanbul ignore next */\n        if (Logger.enabled && process.env.NODE_ENV === 'development') {\n            console.log(...args);\n        }\n    },\n};\n\nexport interface XMLMeta {\n    tag: string;\n    attrs: Record<string, string | number | boolean>;\n    children?: XMLMeta[];\n}\n\n/**\n * 根据元数据构建xml\n */\nexport const buildXML = ({ tag, attrs, children }: XMLMeta): string => {\n    const attributes = Object.keys(attrs)\n        .map(key => `${key.toLowerCase()}=\"${attrs[key]}\"`)\n        .join(' ');\n\n    if (children && children.length) {\n        return `<${tag} ${attributes}>${children.map(child => buildXML(child)).join('')}</${tag}>`;\n    }\n    return `<${tag} ${attributes} />`;\n};\n\n/**\n * 对Object进行map操作\n */\nexport const mapObject = (\n    obj: Record<string, unknown>,\n    mapper: (key: string, value: unknown) => Record<string, unknown>\n): Record<string, unknown> => {\n    return Object.assign(\n        {},\n        ...Object.keys(obj).map(key => {\n            const value = obj[key];\n            return mapper(key, value);\n        })\n    );\n};\n\n/**\n * 主要用于绑定Krpano事件和js调用。提取某个对象中的onXXX属性并替换为对应的调用字符串，丢弃其他属性\n */\nexport const mapEventPropsToJSCall = (\n    obj: Record<string, unknown>,\n    getString: (key: string, value: unknown) => string\n): Record<string, string> =>\n    mapObject(obj, (key, value) => {\n        if (key.startsWith('on') && typeof value === 'function') {\n            return { [key]: getString(key, value) };\n        }\n        return {};\n    }) as Record<string, string>;\n","import { NativeKrpanoRendererObject } from './types';\nimport { buildKrpanoAction, buildKrpanoTagSetterActions } from './utils';\n\nexport type HandlerFunc = (renderer: KrpanoActionProxy) => void;\n\ninterface EventHandler {\n    eventName: string;\n    selector: string;\n    handler: HandlerFunc;\n}\nexport class KrpanoActionProxy {\n    name: string;\n    krpanoRenderer?: NativeKrpanoRendererObject;\n    eventHandlers: EventHandler[] = [];\n\n    constructor(krpanoRenderer?: NativeKrpanoRendererObject, name = 'ReactKrpanoActionProxy') {\n        this.krpanoRenderer = krpanoRenderer;\n        this.name = name;\n    }\n\n    call(action: string, nexttick = false): void {\n        const actionStr = nexttick ? `nexttick(${action})` : action;\n\n        this.krpanoRenderer?.call(actionStr);\n    }\n\n    set(name: string, ...params: Array<string | number | boolean>): void {\n        this.call(buildKrpanoAction('set', name, ...params));\n    }\n\n    setTag(\n        tag: 'scene' | 'hotspot' | 'layer' | 'view' | 'events',\n        name: string | null,\n        attrs: Record<string, string | boolean | number | undefined>\n    ): void {\n        let nexttick = false;\n\n        if (tag === 'hotspot' || tag === 'events') {\n            nexttick = true;\n        }\n\n        this.call(buildKrpanoTagSetterActions(name ? `${tag}[${name}]` : tag, attrs), nexttick);\n    }\n\n    get<T = any>(name: string): T {\n        return this.krpanoRenderer?.get(name);\n    }\n\n    loadScene(name: string): void {\n        this.call(buildKrpanoAction('loadscene', name, 'null', 'MERGE', 'BLEND(0.5)'));\n    }\n    removeScene(name: string): void {\n        if (this.get('scene') && typeof this.get('scene').removeItem === 'function') {\n            this.get('scene').removeItem(name);\n        } else {\n            // TODO: report Error\n        }\n    }\n\n    addHotspot(name: string, attrs: Record<string, string | boolean | number | undefined>): void {\n        this.call(buildKrpanoAction('addhotspot', name), true);\n        this.setTag('hotspot', name, attrs);\n    }\n    removeHotspot(name: string): void {\n        this.call(buildKrpanoAction('removehotspot', name), true);\n    }\n\n    on(eventName: string, selector: string, handler: HandlerFunc): this {\n        this.eventHandlers.push({\n            eventName: eventName.toLowerCase(),\n            selector,\n            handler,\n        });\n        return this;\n    }\n\n    off(eventName: string, selector: string, handler: HandlerFunc): void {\n        this.eventHandlers = this.eventHandlers.filter(\n            e => !(e.eventName === eventName.toLowerCase() && e.selector === selector && e.handler === handler)\n        );\n    }\n\n    fire(eventName: string, selector: string): void {\n        this.eventHandlers\n            .filter(e => e.eventName === eventName.toLowerCase() && e.selector === selector)\n            .map(({ handler }) => handler(this));\n    }\n\n    bindEvents(selector: string, mapEventsToHandler: Record<string, HandlerFunc | undefined>): void {\n        Object.keys(mapEventsToHandler).map(eventName => {\n            const func = mapEventsToHandler[eventName];\n\n            if (func) {\n                this.on(eventName, selector, func);\n            }\n        });\n    }\n\n    unbindEvents(selector: string, mapEventsToHandler: Record<string, HandlerFunc | undefined>): void {\n        Object.keys(mapEventsToHandler).map(eventName => {\n            const func = mapEventsToHandler[eventName];\n\n            if (func) {\n                this.off(eventName, selector, func);\n            }\n        });\n    }\n}\n\nexport default KrpanoActionProxy;\n","import React from 'react';\nimport { CurrentSceneContext } from '../contexts/CurrentSceneContext';\nimport { KrpanoRendererContext } from '../contexts/KrpanoRendererContext';\nimport useEventCallback from '../hooks/useEventCallback';\nimport { useKrpano } from '../hooks/useKrpano';\nimport KrpanoActionProxy from '../KrpanoActionProxy';\nimport { NativeKrpanoRendererObject } from '../types';\nimport { Logger } from '../utils';\n\nexport interface KrpanoProps {\n    className?: string;\n    currentScene?: string;\n    /** Krpano XML地址 */\n    xml?: string;\n    target?: string;\n    id?: string;\n    onReady?: (renderer: KrpanoActionProxy) => void;\n    enableLogger?: boolean;\n}\n\nexport const Krpano: React.FC<KrpanoProps> = ({\n    className,\n    currentScene,\n    target = 'krpano',\n    id,\n    xml,\n    onReady,\n    children,\n    enableLogger = false,\n}) => {\n    const [renderer, setRenderer] = React.useState<KrpanoActionProxy | null>(null);\n    const onReadyRef = useEventCallback(onReady);\n    const onReadyCallback = React.useCallback(\n        (obj: NativeKrpanoRendererObject) => {\n            const renderer = new KrpanoActionProxy(obj);\n            (window as any)[renderer.name] = renderer;\n            setRenderer(renderer);\n            Logger.enabled = enableLogger;\n            Logger.log('Renderer ready.');\n\n            if (onReadyRef.current) {\n                onReadyRef.current(renderer);\n            }\n        },\n        [enableLogger, onReadyRef]\n    );\n    const krpanoConfig = React.useMemo(\n        () => ({\n            target,\n            id,\n            xml: xml || null,\n            onready: onReadyCallback,\n        }),\n        [target, id, xml, onReadyCallback]\n    );\n\n    useKrpano(krpanoConfig);\n\n    return (\n        <KrpanoRendererContext.Provider value={renderer}>\n            <CurrentSceneContext.Provider value={currentScene || null}>\n                <div id={target} className={className} style={className ? {} : { width: '100vw', height: '100vh' }}>\n                    {renderer ? children : null}\n                </div>\n            </CurrentSceneContext.Provider>\n        </KrpanoRendererContext.Provider>\n    );\n};\n\nexport default Krpano;\n","import React from 'react';\nimport { IKrpanoConfig } from '../types';\n\nexport const useKrpano = (config: IKrpanoConfig): void => {\n    React.useEffect(() => {\n        const defaultConfig: Partial<IKrpanoConfig> = {\n            html5: 'prefer',\n            xml: null,\n            consolelog: process.env.NODE_ENV === 'development',\n        };\n        const embedpano = () => {\n            if (typeof window.embedpano === 'function') window.embedpano(Object.assign({}, defaultConfig, config));\n        };\n\n        if (typeof window.embedpano === 'function') {\n            embedpano();\n        } else {\n            // TODO: install krpano\n            throw new Error('Krpano required');\n        }\n    }, [config]);\n};\n","import React from 'react';\n\n/**\n * This hook is design to cache component's callback from props, and avoid unnecessary re-render cause by arrow function.\n * This pattern might cause problems in the concurrent mode.\n *\n * [related section in react doc](https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback)\n *\n * [related github ticket](https://github.com/facebook/react/issues/14099#issuecomment-440013892)\n *\n * @param callback callback to memorize\n * @returns mutable ref object\n */\nexport default function useEventCallback<T>(callback: T): React.MutableRefObject<T> {\n    const callbackRef = React.useRef(callback);\n\n    React.useLayoutEffect(() => {\n        callbackRef.current = callback;\n    }, [callback]);\n\n    return callbackRef;\n}\n","import React, { useContext } from 'react';\nimport { KrpanoRendererContext } from '../contexts/KrpanoRendererContext';\n\n/**\n * @see https://krpano.com/docu/xml/#view\n */\nexport interface ViewProps {\n    hlookat?: number;\n    vlookat?: number;\n    fov?: number;\n    fovMin?: number;\n    fovMax?: number;\n    camRoll?: number;\n    /**\n     * @see https://krpano.com/docu/xml/#view.fovtype\n     */\n    fovType?: 'VFOV' | 'HFOV' | 'DFOV' | 'MFOV' | 'SFOV';\n    maxPixelZoom?: number;\n    mFovRatio?: number;\n    distortion?: number;\n    distortionFovLink?: number;\n    stereographic?: boolean;\n    pannini?: number;\n    architectural?: number;\n    architecturalOnlyMiddle?: boolean;\n    /**\n     * @see https://krpano.com/docu/xml/#view.limitview\n     */\n    limitView?: 'off' | 'auto' | 'lookat' | 'range' | 'fullrange' | 'offrange';\n    hlookatMin?: number;\n    hlookatMax?: number;\n    vlookatMin?: number;\n    vlookatMax?: number;\n    rx?: number;\n    ry?: number;\n    tx?: number;\n    ty?: number;\n    tz?: number;\n    ox?: number;\n    oy?: number;\n    oz?: number;\n    children?: null;\n}\n\nexport const View: React.FC<ViewProps> = ({ children, ...viewAttrs }) => {\n    const renderer = useContext(KrpanoRendererContext);\n\n    React.useEffect(() => {\n        renderer?.setTag('view', null, { ...viewAttrs });\n    }, [renderer, viewAttrs]);\n\n    return <div className=\"view\">{children}</div>;\n};\n\nexport default View;\n","import React, { useContext } from 'react';\nimport { CurrentSceneContext } from '../contexts/CurrentSceneContext';\nimport { KrpanoRendererContext } from '../contexts/KrpanoRendererContext';\nimport { buildXML, Logger, XMLMeta } from '../utils';\n\nexport interface SceneImage {\n    type: string;\n    url: string;\n}\n\nexport interface SceneImageWithMultires {\n    type: string;\n    url: string;\n    // multires props\n    tiledImageWidth: number;\n    tiledImageHeight: number;\n    tileSize?: number;\n    asPreview?: boolean;\n}\n\nexport interface SceneProps {\n    name: string;\n    previewUrl?: string;\n    /** 直接指定scene的xml内容。指定后会忽略其他设置 */\n    content?: string;\n    /** image标签的附加属性，仅少部分情况用到 */\n    imageTagAttributes?: Record<string, string | number | boolean>;\n    /** Scene包含的图片。数组的长度大于1时按multires解析为多个level */\n    images?: [SceneImage] | SceneImageWithMultires[];\n}\n\nexport const Scene: React.FC<SceneProps> = ({\n    name,\n    previewUrl,\n    imageTagAttributes = {},\n    images = [],\n    content,\n    children,\n}) => {\n    const renderer = useContext(KrpanoRendererContext);\n    const currentScene = useContext(CurrentSceneContext);\n\n    React.useEffect(() => {\n        const contentImageMeta: XMLMeta = {\n            tag: 'image',\n            attrs: imageTagAttributes,\n            children: [],\n        };\n\n        // multires\n        if (images.length > 1) {\n            contentImageMeta.children!.push(\n                ...(images as SceneImageWithMultires[]).map(\n                    ({ tiledImageWidth, tiledImageHeight, tileSize, asPreview = false, type, ...img }) => {\n                        const imgXML: XMLMeta = {\n                            tag: 'level',\n                            // FIXME: tiledImageWidth等值使用者不一定会提供，需要进行检查、提示以及fallback\n                            attrs: {\n                                tiledImageWidth,\n                                tiledImageHeight,\n                                asPreview,\n                            },\n                            children: [\n                                {\n                                    tag: type,\n                                    attrs: { ...img },\n                                },\n                            ],\n                        };\n\n                        if (tileSize) {\n                            imgXML.attrs = Object.assign(imgXML.attrs, { tileSize });\n                        }\n\n                        return imgXML;\n                    }\n                )\n            );\n        } else if (images.length === 1) {\n            const { type, ...img } = images[0] as SceneImage;\n\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            contentImageMeta.children!.push({\n                tag: type,\n                attrs: { ...img },\n            });\n        }\n\n        renderer?.setTag('scene', name, {\n            content:\n                content ||\n                `${previewUrl ? `<preview url=\"${previewUrl}\" />` : ''}${\n                    images.length > 0 ? buildXML(contentImageMeta) : ''\n                }`,\n        });\n\n        return () => {\n            renderer?.removeScene(name);\n        };\n    }, [renderer, name, images, imageTagAttributes, content, previewUrl]);\n\n    React.useEffect(() => {\n        if (currentScene === name) {\n            renderer?.loadScene(name);\n            Logger.log(`Scene ${name} loaded due to currentScene change.`);\n        }\n    }, [name, renderer, currentScene]);\n\n    return <div className=\"scene\">{currentScene === name ? children : null}</div>;\n};\n\nexport default Scene;\n","import React, { useContext } from 'react';\nimport { KrpanoRendererContext } from '../contexts/KrpanoRendererContext';\nimport { EventCallback } from '../types';\nimport { Logger, mapEventPropsToJSCall, mapObject } from '../utils';\n\nexport interface ImageHotspotConfig {\n    name: string;\n    url?: string;\n    type?: string;\n    keep?: boolean;\n    visible?: boolean;\n    enabled?: boolean;\n    handCursor?: boolean;\n    cursor?: string;\n    maskChildren?: boolean;\n    zOrder?: string;\n    style?: string;\n    ath?: number;\n    atv?: number;\n    edge?: string;\n    zoom?: boolean;\n    distorted?: boolean;\n    rx?: number;\n    ry?: number;\n    rz?: number;\n    width?: string;\n    height?: string;\n    scale?: number;\n    rotate?: number;\n    alpha?: number;\n    onOver?: EventCallback;\n    onHover?: EventCallback;\n    onOut?: EventCallback;\n    onDown?: EventCallback;\n    onUp?: EventCallback;\n    onClick?: EventCallback;\n    onLoaded?: EventCallback;\n}\n\nexport interface HotspotProps extends ImageHotspotConfig {}\n\nexport const Hotspot: React.FC<HotspotProps> = ({ name, children, ...hotspotAttrs }) => {\n    const renderer = useContext(KrpanoRendererContext);\n    const EventSelector = `hotspot[${name}]`;\n\n    React.useEffect(() => {\n        const eventsObj = mapObject({ ...hotspotAttrs }, (key, value) => {\n            if (key.startsWith('on') && typeof value === 'function') {\n                return {\n                    [key]: value,\n                };\n            }\n            return {};\n        });\n        renderer?.bindEvents(EventSelector, eventsObj as any);\n\n        renderer?.addHotspot(name, {});\n\n        return () => {\n            renderer?.unbindEvents(EventSelector, eventsObj as any);\n            renderer?.removeHotspot(name);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        renderer?.setTag(\n            'hotspot',\n            name,\n            Object.assign(\n                { ...hotspotAttrs },\n                mapEventPropsToJSCall({ ...hotspotAttrs }, key => `js(${renderer?.name}.fire(${key},${EventSelector}))`)\n            )\n        );\n        Logger.log(`hotspot ${name} updated due to attrs change`);\n    }, [renderer, name, hotspotAttrs, EventSelector]);\n\n    return <div className=\"hotspot\">{children}</div>;\n};\n\nexport default Hotspot;\n","import React from 'react';\nimport { KrpanoRendererContext } from '../contexts/KrpanoRendererContext';\nimport { EventCallback } from '../types';\nimport { mapEventPropsToJSCall } from '../utils';\n\nexport interface EventsConfig {\n    /** 事件名，若存在该参数则为局部事件 */\n    name?: string;\n    /** 暂时不支持 */\n    keep?: boolean;\n    onEnterFullscreen?: EventCallback;\n    onExitFullscreen?: EventCallback;\n    onXmlComplete?: EventCallback;\n    onPreviewComplete?: EventCallback;\n    onLoadComplete?: EventCallback;\n    onBlendComplete?: EventCallback;\n    onNewPano?: EventCallback;\n    onRemovePano?: EventCallback;\n    onNewScene?: EventCallback;\n    onXmlError?: EventCallback;\n    onLoadError?: EventCallback;\n    onKeydown?: EventCallback;\n    onKeyup?: EventCallback;\n    onClick?: EventCallback;\n    onSingleClick?: EventCallback;\n    onDoubleClick?: EventCallback;\n    onMousedown?: EventCallback;\n    onMouseup?: EventCallback;\n    onMousewheel?: EventCallback;\n    onContextmenu?: EventCallback;\n    onIdle?: EventCallback;\n    onViewChange?: EventCallback;\n    onViewChanged?: EventCallback;\n    onResize?: EventCallback;\n    onFrameBufferResize?: EventCallback;\n    onAutoRotateStart?: EventCallback;\n    onAutoRotateStop?: EventCallback;\n    onAutoRotateOneRound?: EventCallback;\n    onAutoRotateChange?: EventCallback;\n    onIPhoneFullscreen?: EventCallback;\n}\n\nexport interface EventsProps extends EventsConfig {}\n\nconst GlobalEvents = '__GlobalEvents';\n\nexport const Events: React.FC<EventsProps> = ({ name, keep, children, ...EventsAttrs }) => {\n    const renderer = React.useContext(KrpanoRendererContext);\n    const EventSelector = React.useMemo(() => `events[${name || GlobalEvents}]`, [name]);\n\n    // 在renderer上绑定回调\n    React.useEffect(() => {\n        renderer?.bindEvents(EventSelector, { ...EventsAttrs });\n\n        return () => {\n            renderer?.unbindEvents(EventSelector, { ...EventsAttrs });\n        };\n    }, [renderer, EventsAttrs, EventSelector]);\n\n    // Krpano标签上添加js call，触发事件\n    React.useEffect(() => {\n        renderer?.setTag(\n            'events',\n            // 全局事件直接设置\n            name || null,\n            mapEventPropsToJSCall(\n                { ...EventsAttrs },\n                eventName => `js(${renderer.name}.fire(${eventName},${EventSelector}))`\n            )\n        );\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [EventSelector, name, renderer]);\n\n    return <div className=\"events\"></div>;\n};\n\nexport default Events;\n","import { Hotspot, HotspotProps, Krpano, KrpanoActionProxy, Scene, SceneProps } from '@0xllllh/react-krpano';\nimport React from 'react';\n\nimport './index.css';\n\ninterface PageDynamicHotspotProps {}\n\nconst PageDynamicHotspot: React.FC<PageDynamicHotspotProps> = () => {\n    const [hotspots, setHotspots] = React.useState<HotspotProps[]>([]);\n    const [renderer, setRenderer] = React.useState<KrpanoActionProxy | null>(null);\n    const onAddHotspot = React.useCallback(() => {\n        setHotspots([\n            ...hotspots,\n            {\n                name: `hotspot${hotspots.length}`,\n                ath: renderer?.get('view.hlookat') || 0,\n                atv: renderer?.get('view.vlookat') || 0,\n                style: 'hotspot-style',\n            },\n        ]);\n    }, [hotspots, renderer]);\n\n    return (\n        <div className=\"page-dynamic-hotspot\">\n            <Krpano\n                xml={`${process.env.PUBLIC_URL}/xml/dynamic-hotspot.xml`}\n                className=\"pano\"\n                currentScene=\"scene0\"\n                onReady={setRenderer}\n            >\n                <Scene\n                    name=\"scene0\"\n                    images={[\n                        {\n                            type: 'cube',\n                            url:\n                                'https://qhyxpicoss.kujiale.com/r/2017/09/01/L3D221IS3QKUQUQBOGAPEK3P3XU888_7500x1250.jpg_%s',\n                        },\n                    ]}\n                >\n                    {hotspots.map((hs) => (\n                        <Hotspot key={hs.name} {...hs} />\n                    ))}\n                </Scene>\n            </Krpano>\n            <div className=\"action-bar\">\n                <div className=\"action-button\" onClick={onAddHotspot}>\n                    +\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PageDynamicHotspot;\n","import { Krpano } from '@0xllllh/react-krpano';\nimport React from 'react';\n\ninterface PageLoadXMLProps {}\n\nconst PageLoadXML: React.FC<PageLoadXMLProps> = () => (\n    <Krpano className=\"pano\" xml={`${process.env.PUBLIC_URL}/xml/load-xml.xml`} />\n);\n\nexport default PageLoadXML;\n","import { Hotspot, Krpano, Scene, SceneProps, View } from '@0xllllh/react-krpano';\nimport React from 'react';\n\nimport './index.css';\n\ninterface PageMultiresProps {}\n\nconst SceneConfig: SceneProps[] = [\n    {\n        name: 'scene0',\n        // 重要！必须提供tilesize\n        imageTagAttributes: {\n            tilesize: 256,\n            baseindex: 0,\n        },\n        images: [\n            {\n                type: 'cube',\n                url:\n                    'https://qhrenderpicoss.kujiale.com/r/2020/11/08/L3D222S21ENDIK37RIAUI5L7ELUF3P3WO888.0_6000x1000.jpg_%s?x-oss-process=image/resize,w_256',\n\n                tiledImageWidth: 256,\n                tiledImageHeight: 256,\n                asPreview: true,\n            },\n            {\n                type: 'cube',\n                url:\n                    'https://qhrenderpicoss.kujiale.com/r/2020/11/08/L3D222S21ENDIK37RIAUI5L7ELUF3P3WO888.0_6000x1000.jpg_%s?x-oss-process=image/resize,w_512|image/indexcrop,x_256,i_%h|image/indexcrop,y_256,i_%v',\n\n                tiledImageWidth: 512,\n                tiledImageHeight: 512,\n            },\n            {\n                type: 'cube',\n                url:\n                    'https://qhrenderpicoss.kujiale.com/r/2020/11/08/L3D222S21ENDIK37RIAUI5L7ELUF3P3WO888.0_6000x1000.jpg_%s?x-oss-process=image/indexcrop,x_256,i_%h|image/indexcrop,y_256,i_%v',\n\n                tiledImageWidth: 1200,\n                tiledImageHeight: 1200,\n            },\n        ],\n    },\n    {\n        name: 'scene1',\n        images: [\n            {\n                type: 'cube',\n                url: 'https://qhyxpicoss.kujiale.com/r/2017/09/01/L3D221IS3QKUQUQBOGAPEK3P3XU888_7500x1250.jpg_%s',\n            },\n        ],\n    },\n];\n\nconst PageMultires: React.FC<PageMultiresProps> = () => {\n    const [currentSceneIndex, setCurrentSceneIndex] = React.useState(0);\n\n    return (\n        <div className=\"page-switch-scene\">\n            <Krpano className=\"pano\" currentScene={SceneConfig[currentSceneIndex].name}>\n                {SceneConfig.map((sc, idx) => (\n                    <Scene key={sc.name} {...sc}>\n                        <Hotspot\n                            name=\"hotspot0\"\n                            type=\"image\"\n                            url=\"https://0xllllh.github.io/krpano-examples/images/hotspot.png\"\n                            ath={0}\n                            atv={0}\n                            onClick={() => {\n                                setCurrentSceneIndex((idx + 1) % SceneConfig.length);\n                            }}\n                        />\n                        <View fov={90} fovMin={80} fovMax={120} />\n                    </Scene>\n                ))}\n            </Krpano>\n        </div>\n    );\n};\n\nexport default PageMultires;\n","import { Krpano, Scene, SceneProps } from '@0xllllh/react-krpano';\nimport React from 'react';\n\nimport './index.css';\n\ninterface PageSwitchSceneProps {}\n\nconst SceneConfig: SceneProps[] = [\n    {\n        name: 'scene0',\n        images: [\n            {\n                type: 'cube',\n                url: 'https://qhyxpicoss.kujiale.com/r/2017/09/01/L3D221IS3QKUQUQBOGAPEK3P3XU888_7500x1250.jpg_%s',\n            },\n        ],\n    },\n    {\n        name: 'scene1',\n        images: [\n            {\n                type: 'cube',\n                url:\n                    'https://qhrenderpicoss.kujiale.com/r/2020/11/08/L3D222S21ENDIK37RIAUI5L7ELUF3P3WO888.0_6000x1000.jpg_%s',\n            },\n        ],\n    },\n];\n\nconst PageSwitchScene: React.FC<PageSwitchSceneProps> = () => {\n    const [currentScene, setCurrentScene] = React.useState(SceneConfig[0].name);\n    const handleClick = React.useCallback((name: string) => () => setCurrentScene(name), [setCurrentScene]);\n\n    return (\n        <div className=\"page-switch-scene\">\n            <Krpano className=\"pano\" currentScene={currentScene} enableLogger={true}>\n                {SceneConfig.map((sc) => (\n                    <Scene key={sc.name} {...sc} />\n                ))}\n            </Krpano>\n            <div className=\"scene-list\">\n                {SceneConfig.map((sc) => (\n                    <div\n                        key={sc.name}\n                        className={`scene-list-item ${sc.name === currentScene ? 'active' : ''}`}\n                        onClick={handleClick(sc.name)}\n                    >\n                        <img src={sc.previewUrl || sc.images![0].url.replace('%s', 'f')} alt={sc.name} />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default PageSwitchScene;\n","import { createAction, createReducer } from '@reduxjs/toolkit';\nimport { PanoState, Scene, Hotspot } from './types';\n\nexport const loadPano = createAction<PanoState>('pano/loadPano');\nexport const changeCurrentScene = createAction<string>('pano/changeCurrentScene');\nexport const addScene = createAction<Scene>('pano/addScene');\nexport const addHotspot = createAction<Hotspot>('pano/addHotspot');\n\nconst initialState: PanoState = {\n    currentScene: 'default',\n    scenes: {\n        byId: {\n            default: {\n                name: 'default',\n\n                hotspotIds: [],\n                images: [\n                    {\n                        type: 'cube',\n                        url:\n                            'https://qhyxpicoss.kujiale.com/r/2017/09/01/L3D221IS3QKUQUQBOGAPEK3P3XU888_7500x1250.jpg_%s',\n                    },\n                ],\n            },\n        },\n        ids: ['default'],\n    },\n    hotspots: {\n        byId: {},\n        ids: [],\n    },\n};\n\nconst panoReducer = createReducer(initialState, (builder) => {\n    builder\n        .addCase(loadPano, (state, action) => {\n            state.currentScene = action.payload.currentScene;\n            state.scenes = action.payload.scenes;\n            state.hotspots = action.payload.hotspots;\n        })\n        .addCase(changeCurrentScene, (state, action) => {\n            state.currentScene = action.payload;\n        })\n        .addCase(addScene, (state, action) => {\n            const { name } = action.payload;\n            state.scenes.byId[name] = action.payload;\n            state.scenes.ids = [...state.scenes.ids, name];\n        })\n        .addCase(addHotspot, (state, action) => {\n            const { name } = action.payload;\n            state.hotspots.byId[name] = action.payload;\n            state.hotspots.ids = [...state.hotspots.ids, name];\n            state.scenes.byId[state.currentScene].hotspotIds = [\n                ...state.scenes.byId[state.currentScene].hotspotIds,\n                name,\n            ];\n        });\n});\n\nexport default panoReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport panoReducer from './reducer';\n\nexport const store = configureStore({\n    reducer: panoReducer,\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { v4 } from 'uuid';\n\nimport { PanoState, Scene } from './types';\n\nconst StorageKey = 'PanoState';\nconst DefaultScene: Scene = {\n    name: 'default',\n    images: [\n        {\n            type: 'cube',\n            url: 'https://qhyxpicoss.kujiale.com/r/2017/09/01/L3D221IS3QKUQUQBOGAPEK3P3XU888_7500x1250.jpg_%s',\n        },\n    ],\n    hotspotIds: [],\n};\nconst DefaultState: PanoState = {\n    currentScene: 'default',\n    scenes: {\n        byId: {\n            default: DefaultScene,\n        },\n        ids: [DefaultScene.name],\n    },\n    hotspots: {\n        byId: {},\n        ids: [],\n    },\n};\nexport const getPanoState = (): Promise<PanoState> => {\n    return new Promise((resolve) => {\n        const stateStr = localStorage.getItem(StorageKey);\n        if (stateStr === null) {\n            resolve(DefaultState);\n        } else {\n            try {\n                const state = JSON.parse(stateStr);\n                resolve(state);\n            } catch (e) {\n                resolve(DefaultState);\n            }\n        }\n    });\n};\n\nexport const savePanoState = (appState: PanoState): Promise<void> => {\n    return new Promise((resolve) => {\n        localStorage.setItem(StorageKey, JSON.stringify(appState));\n        resolve();\n    });\n};\n\nlet count = 0;\nexport const generateNewScene = (): Promise<Scene> => {\n    count++;\n    return Promise.resolve({\n        ...DefaultScene,\n        name: `sc${v4()}`,\n        images: [\n            {\n                type: 'cube',\n                url:\n                    count % 2 === 0\n                        ? 'https://qhyxpicoss.kujiale.com/r/2017/09/01/L3D221IS3QKUQUQBOGAPEK3P3XU888_7500x1250.jpg_%s'\n                        : 'https://qhrenderpicoss.kujiale.com/r/2020/11/08/L3D222S21ENDIK37RIAUI5L7ELUF3P3WO888.0_6000x1000.jpg_%s',\n            },\n        ],\n    });\n};\n","import { Hotspot, Krpano, KrpanoActionProxy, Scene } from '@0xllllh/react-krpano';\nimport React from 'react';\n\nimport { useAppDispatch, useAppSelector } from './hooks';\nimport { loadPano, addHotspot, changeCurrentScene, addScene } from './reducer';\nimport * as api from './api';\n\ninterface ReduxAppProps {}\n\nconst ReduxApp: React.FC<ReduxAppProps> = () => {\n    const currentState = useAppSelector((state) => state);\n    const currentScene = useAppSelector((state) => state.currentScene);\n    const scenes = useAppSelector((state) => state.scenes.ids.map((id) => state.scenes.byId[id]));\n    const hotspotCount = useAppSelector((state) => state.hotspots.ids.length);\n    const hotspotById = useAppSelector((state) => state.hotspots.byId);\n    const dispatch = useAppDispatch();\n    const [renderer, setRenderer] = React.useState<KrpanoActionProxy | null>(null);\n\n    const onReady = React.useCallback((renderer: KrpanoActionProxy) => {\n        setRenderer(renderer);\n        api.getPanoState().then((pano) => {\n            dispatch(loadPano(pano));\n        });\n    }, []);\n    const onAddHotspot = React.useCallback(() => {\n        dispatch(\n            addHotspot({\n                name: `hotspot${hotspotCount + 1}`,\n                ath: renderer?.get('view.hlookat') || 0,\n                atv: renderer?.get('view.vlookat') || 0,\n                style: 'hotspot-style',\n            }),\n        );\n    }, [renderer, hotspotCount]);\n    const onSave = React.useCallback(() => {\n        api.savePanoState(currentState).then(() => {\n            window.alert('pano saved');\n        });\n    }, [currentState]);\n    const handleChangeScene = (name: string) => () => dispatch(changeCurrentScene(name));\n    const onAddScene = React.useCallback(() => {\n        api.generateNewScene().then((sc) => {\n            dispatch(addScene(sc));\n            alert('new scene added');\n        });\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Krpano\n                xml={`${process.env.PUBLIC_URL}/xml/dynamic-hotspot.xml`}\n                className=\"pano\"\n                currentScene={currentScene}\n                onReady={onReady}\n                enableLogger={true}\n            >\n                {scenes.map((scene) => (\n                    <Scene key={scene.name} {...scene}>\n                        {scene.hotspotIds\n                            .map((name) => hotspotById[name])\n                            .map((hs) => (\n                                <Hotspot key={hs.name} {...hs} />\n                            ))}\n                    </Scene>\n                ))}\n            </Krpano>\n            <div className=\"action-bar\">\n                <div className=\"action-button\" onClick={onAddHotspot}>\n                    +\n                </div>\n                <div className=\"action-button\" onClick={onSave}>\n                    📥\n                </div>\n            </div>\n\n            <div className=\"scene-list\">\n                {scenes.map((sc) => (\n                    <div\n                        key={sc.name}\n                        className={`scene-list-item ${sc.name === currentScene ? 'active' : ''}`}\n                        onClick={handleChangeScene(sc.name)}\n                    >\n                        <img src={sc.previewUrl || sc.images![0].url.replace('%s', 'f')} alt={sc.name} />\n                    </div>\n                ))}\n                <div className=\"scene-list-item scene-list-item--add\" onClick={onAddScene}>\n                    +\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default ReduxApp;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nimport ReduxApp from './App';\n\nimport './index.css';\n\nconst PageRedux: React.FC = () => (\n    <div className=\"page-redux\">\n        <Provider store={store}>\n            <ReduxApp />\n        </Provider>\n    </div>\n);\n\nexport default PageRedux;\n","import React from 'react';\nimport { Switch, Route, Link, Redirect } from 'react-router-dom';\nimport './App.css';\nimport Aside from './components/Aside';\nimport { FlexItem, HStack, VStack } from './components/FlexContainer';\nimport GithubCorner from './components/GithubCorner';\nimport Header from './components/Header';\nimport PageDynamicHotspot from './pages/DynamicHotspot';\nimport PageLoadXML from './pages/LoadXML';\nimport PageMultires from './pages/Multires';\nimport PageSwitchScene from './pages/SwitchScene';\nimport PageRedux from './pages/Redux';\n\nfunction App() {\n    return (\n        <VStack className=\"App\">\n            {/* <Header /> */}\n            <GithubCorner />\n            <HStack>\n                <Aside />\n                <FlexItem>\n                    <Switch>\n                        <Route path=\"/\" exact>\n                            <Redirect to=\"/load-xml\" />\n                        </Route>\n                        <Route path=\"/load-xml\">\n                            <PageLoadXML />\n                        </Route>\n                        <Route path=\"/switch-scene\">\n                            <PageSwitchScene />\n                        </Route>\n                        <Route path=\"/dynamic-hotspot\">\n                            <PageDynamicHotspot />\n                        </Route>\n                        <Route path=\"/multires\">\n                            <PageMultires />\n                        </Route>\n                        <Route path=\"/redux\">\n                            <PageRedux />\n                        </Route>\n                    </Switch>\n                </FlexItem>\n            </HStack>\n        </VStack>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
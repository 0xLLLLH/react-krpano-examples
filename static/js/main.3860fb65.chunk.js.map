{"version":3,"sources":["components/FlexContainer/index.tsx","components/Aside/index.tsx","components/GithubCorner/index.tsx","../../../src/contexts/CurrentSceneContext.ts","../../../src/contexts/KrpanoRendererContext.ts","../../../node_modules/escape-html/index.js","../../../src/utils.ts","../../../src/KrpanoActionProxy.ts","../../../src/components/Krpano.tsx","../../../src/hooks/useKrpano.ts","../../../src/components/View.tsx","../../../src/components/Scene.tsx","../../../src/components/Hotspot.tsx","../../../src/components/Events.tsx","pages/DynamicHotspot/index.tsx","pages/LoadXML/index.tsx","pages/Multires/index.tsx","pages/SwitchScene/index.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["HStack","className","justifyContent","children","style","VStack","FlexItem","flex","MenuItem","path","exact","match","useRouteMatch","to","Aside","React","collapsed","setCollapsed","onToggle","onClick","GithubCorner","href","target","aria-label","viewBox","aria-hidden","d","fill","transformOrigin","CurrentSceneContext","KrpanoRendererContext","matchHtmlRegExp","string","escape","str","exec","html","index","lastIndex","length","charCodeAt","substring","buildKrpanoAction","func","params","p","Logger","buildXML","attributes","Object","key","attrs","tag","child","mapObject","value","obj","mapper","mapEventPropsToJSCall","getString","constructor","name","krpanoRenderer","eventHandlers","this","nexttick","actionStr","val","quete","escapeHTML","buildKrpanoTagSetterActions","get","eventName","selector","handler","filter","e","mapEventsToHandler","Krpano","config","onReadyCallback","renderer","window","setRenderer","onReady","id","xml","onready","defaultConfig","html5","consolelog","process","Error","currentScene","width","height","View","viewAttrs","useContext","Scene","imageTagAttributes","images","contentImageMeta","asPreview","imgXML","tiledImageWidth","tiledImageHeight","type","tileSize","content","previewUrl","Hotspot","hotspotAttrs","EventSelector","eventsObj","PageDynamicHotspot","useState","hotspots","setHotspots","onAddHotspot","useCallback","ath","atv","url","map","hs","PageLoadXML","SceneConfig","tilesize","baseindex","PageMultires","currentSceneIndex","setCurrentSceneIndex","sc","idx","fov","fovMin","fovMax","PageSwitchScene","setCurrentScene","handleClick","src","replace","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3860fb65.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { CSSProperties } from \"react\";\n\nimport \"./index.css\";\n\ninterface FlexContainerProps {\n  className?: string;\n  justifyContent?: CSSProperties[\"justifyContent\"];\n}\n\nexport const HStack: React.FC<FlexContainerProps> = ({\n  className = \"\",\n  justifyContent,\n  children,\n}) => (\n  <div\n    className={`flex-container h-stack ${className}`}\n    style={{ justifyContent }}\n  >\n    {children}\n  </div>\n);\n\nexport const VStack: React.FC<FlexContainerProps> = ({\n  className = \"\",\n  justifyContent,\n  children,\n}) => (\n  <div\n    className={`flex-container v-stack ${className}`}\n    style={{ justifyContent }}\n  >\n    {children}\n  </div>\n);\n\ninterface ItemProps {\n  flex?: CSSProperties[\"flex\"];\n}\n\nexport const FlexItem: React.FC<ItemProps> = ({ flex, children }) => (\n  <div className=\"flex-item\" style={{ flex }}>\n    {children}\n  </div>\n);\n","import * as React from \"react\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport { FlexItem, VStack } from \"../FlexContainer\";\n\nimport \"./index.css\";\n\nconst MenuItem: React.FC<{\n  children: string;\n  path: string;\n  exact?: boolean;\n}> = ({ children, path, exact }) => {\n  let match = useRouteMatch({\n    path,\n    exact,\n  });\n\n  return (\n    <div className={`aside-menu-item ${match ? \"active\" : \"\"}`}>\n      <Link className={`aside-menu-item-link`} to={path}>\n        {children}\n      </Link>\n    </div>\n  );\n};\n\nconst Aside: React.FC<{}> = () => {\n  const [collapsed, setCollapsed] = React.useState(false);\n  const onToggle = React.useCallback(() => {\n    setCollapsed(!collapsed);\n  }, [collapsed, setCollapsed]);\n\n  return (\n    <aside className={`app-aside ${collapsed ? \"collapsed\" : \"\"}`}>\n      <VStack>\n        <div className=\"aside-title\">React Krpano Examples</div>\n        <VStack className=\"aside-menu\">\n          <MenuItem path=\"/load-xml\">加载XML</MenuItem>\n          <MenuItem path=\"/switch-scene\">切换场景</MenuItem>\n          <MenuItem path=\"/multires\">多分辨率</MenuItem>\n          <MenuItem path=\"/dynamic-hotspot\">动态热点</MenuItem>\n        </VStack>\n        <div className=\"aside-toggle-bar\" onClick={onToggle}>\n          <span></span>\n          <span></span>\n          <span></span>\n        </div>\n      </VStack>\n    </aside>\n  );\n};\n\nexport default Aside;\n","import * as React from \"react\";\n\nimport \"./index.css\";\n\ninterface GithubCornerProps {}\n\nconst GithubCorner: React.FC<GithubCornerProps> = () => (\n  <a\n    href=\"https://github.com/0xLLLLH/react-krpano-examples\"\n    target=\"_blank\"\n    className=\"github-corner\"\n    aria-label=\"View source on Github\"\n  >\n    <svg viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n      <path\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n        fill=\"currentColor\"\n        style={{ transformOrigin: \"130px 106px\" }}\n        className=\"octo-arm\"\n      ></path>\n      <path\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n        fill=\"currentColor\"\n        className=\"octo-body\"\n      ></path>\n    </svg>\n  </a>\n);\n\nexport default GithubCorner;\n","import React from 'react';\n\nexport const CurrentSceneContext = React.createContext<string | null>(null);\n","import React from 'react';\nimport KrpanoActionProxy from '../KrpanoActionProxy';\n\nexport const KrpanoRendererContext = React.createContext<KrpanoActionProxy | null>(null);\n","/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","import escapeHTML from 'escape-html';\n\ntype FuncName = 'set' | 'loadxml' | 'loadscene' | 'addhotspot' | 'removehotspot' | 'nexttick';\n\n/**\n * 执行单个函数\n * @param func 函数名\n * @param params 参数列表\n */\nexport const buildKrpanoAction = (func: FuncName, ...params: Array<string | number | boolean>): string =>\n    `${func}(${params.map(p => `${p}`).join(', ')});`;\n\n/**\n * 动态添加标签用\n * @see https://krpano.com/forum/wbb/index.php?page=Thread&threadID=15873\n */\nexport const buildKrpanoTagSetterActions = (\n    name: string,\n    attrs: Record<string, string | boolean | number | undefined>\n): string =>\n    Object.keys(attrs)\n        .map(key => {\n            const val = attrs[key];\n            key = key.toLowerCase();\n            if (val === undefined) {\n                return '';\n            }\n            // 如果属性值中有双引号，需要改用单引号\n            let quete = '\"';\n            if (val.toString().includes(quete)) {\n                // eslint-disable-next-line quotes\n                quete = \"'\";\n            }\n            if (key === 'style') {\n                return `assignstyle(${name}, ${val});`;\n            }\n            if (typeof val === 'boolean' || typeof val === 'number') {\n                return `set(${name}.${key}, ${val});`;\n            }\n            // content是XML文本，不能转义，因为不涉及用户输入也不需要\n            return `set(${name}.${key}, ${quete}${key === 'content' ? val : escapeHTML(val.toString())}${quete});`;\n        })\n        .filter(str => !!str)\n        .join('');\n\nexport const Logger = {\n    log: (...args: any[]): void => {\n        if (process.env.NODE_ENV === 'development') {\n            console.log(...args);\n        }\n    },\n};\n\nexport interface XMLMeta {\n    tag: string;\n    attrs: Record<string, string | number | boolean>;\n    children?: XMLMeta[];\n}\n\n/**\n * 根据元数据构建xml\n */\nexport const buildXML = ({ tag, attrs, children }: XMLMeta): string => {\n    const attributes = Object.keys(attrs)\n        .map(key => `${key.toLowerCase()}=\"${attrs[key]}\"`)\n        .join(' ');\n\n    if (children && children.length) {\n        return `<${tag} ${attributes}>${children.map(child => buildXML(child)).join('')}</${tag}>`;\n    }\n    return `<${tag} ${attributes} />`;\n};\n\nexport const mapObject = (\n    obj: Record<string, unknown>,\n    mapper: (key: string, value: unknown) => Record<string, unknown>\n): Record<string, unknown> => {\n    return Object.assign(\n        {},\n        ...Object.keys(obj).map(key => {\n            const value = obj[key];\n            return mapper(key, value);\n        })\n    );\n};\n\nexport const mapEventPropsToJSCall = (\n    obj: Record<string, unknown>,\n    getString: (key: string, value: unknown) => string\n): Record<string, string> =>\n    mapObject(obj, (key, value) => {\n        if (key.startsWith('on') && typeof value === 'function') {\n            return { [key]: getString(key, value) };\n        }\n        return {};\n    }) as Record<string, string>;\n","import { NativeKrpanoRendererObject } from './types';\nimport { buildKrpanoAction, buildKrpanoTagSetterActions } from './utils';\n\nexport type HandlerFunc = (renderer: KrpanoActionProxy) => void;\n\ninterface EventHandler {\n    eventName: string;\n    selector: string;\n    handler: HandlerFunc;\n}\nexport class KrpanoActionProxy {\n    name: string;\n    krpanoRenderer?: NativeKrpanoRendererObject;\n    eventHandlers: EventHandler[] = [];\n\n    constructor(krpanoRenderer?: NativeKrpanoRendererObject, name = 'ReactKrpanoActionProxy') {\n        this.krpanoRenderer = krpanoRenderer;\n        this.name = name;\n    }\n\n    call(action: string, nexttick = false): void {\n        const actionStr = nexttick ? `nexttick(${action})` : action;\n\n        this.krpanoRenderer?.call(actionStr);\n    }\n\n    set(name: string, ...params: Array<string | number | boolean>): void {\n        this.call(buildKrpanoAction('set', name, ...params));\n    }\n\n    setTag(\n        tag: 'scene' | 'hotspot' | 'layer' | 'view' | 'events',\n        name: string | null,\n        attrs: Record<string, string | boolean | number | undefined>\n    ): void {\n        let nexttick = false;\n\n        if (tag === 'hotspot' || tag === 'events') {\n            nexttick = true;\n        }\n\n        this.call(buildKrpanoTagSetterActions(name ? `${tag}[${name}]` : tag, attrs), nexttick);\n    }\n\n    get<T = any>(name: string): T {\n        return this.krpanoRenderer?.get(name);\n    }\n\n    loadScene(name: string): void {\n        this.call(buildKrpanoAction('loadscene', name, 'null', 'MERGE', 'BLEND(0.5)'));\n    }\n    removeScene(name: string): void {\n        if (this.get('scene') && typeof this.get('scene').removeItem === 'function') {\n            this.get('scene').removeItem(name);\n        } else {\n            // TODO: report Error\n        }\n    }\n\n    addHotspot(name: string, attrs: Record<string, string | boolean | number | undefined>): void {\n        this.call(buildKrpanoAction('addhotspot', name), true);\n        this.setTag('hotspot', name, attrs);\n    }\n    removeHotspot(name: string): void {\n        this.call(buildKrpanoAction('removehotspot', name), true);\n    }\n\n    on(eventName: string, selector: string, handler: HandlerFunc): this {\n        this.eventHandlers.push({\n            eventName: eventName.toLowerCase(),\n            selector,\n            handler,\n        });\n        return this;\n    }\n\n    off(eventName: string, selector: string, handler: HandlerFunc): void {\n        this.eventHandlers = this.eventHandlers.filter(\n            e => !(e.eventName === eventName.toLowerCase() && e.selector === selector && e.handler === handler)\n        );\n    }\n\n    fire(eventName: string, selector: string): void {\n        this.eventHandlers\n            .filter(e => e.eventName === eventName.toLowerCase() && e.selector === selector)\n            .map(({ handler }) => handler(this));\n    }\n\n    bindEvents(selector: string, mapEventsToHandler: Record<string, HandlerFunc | undefined>): void {\n        Object.keys(mapEventsToHandler).map(eventName => {\n            const func = mapEventsToHandler[eventName];\n\n            if (func) {\n                this.on(eventName, selector, func);\n            }\n        });\n    }\n\n    unbindEvents(selector: string, mapEventsToHandler: Record<string, HandlerFunc | undefined>): void {\n        Object.keys(mapEventsToHandler).map(eventName => {\n            const func = mapEventsToHandler[eventName];\n\n            if (func) {\n                this.off(eventName, selector, func);\n            }\n        });\n    }\n}\n\nexport default KrpanoActionProxy;\n","import React from 'react';\nimport { CurrentSceneContext } from '../contexts/CurrentSceneContext';\nimport { KrpanoRendererContext } from '../contexts/KrpanoRendererContext';\nimport { useKrpano } from '../hooks/useKrpano';\nimport KrpanoActionProxy from '../KrpanoActionProxy';\nimport { NativeKrpanoRendererObject } from '../types';\nimport { Logger } from '../utils';\n\nexport interface KrpanoProps {\n    className?: string;\n    currentScene?: string;\n    /** Krpano XML地址 */\n    xml?: string;\n    target?: string;\n    id?: string;\n    onReady?: (renderer: KrpanoActionProxy) => void;\n}\n\nexport const Krpano: React.FC<KrpanoProps> = ({\n    className,\n    currentScene,\n    target = 'krpano',\n    id,\n    xml,\n    onReady,\n    children,\n}) => {\n    const [renderer, setRenderer] = React.useState<KrpanoActionProxy | null>(null);\n    const onReadyCallback = React.useCallback(\n        (obj: NativeKrpanoRendererObject) => {\n            const renderer = new KrpanoActionProxy(obj);\n            (window as any)[renderer.name] = renderer;\n            setRenderer(renderer);\n            Logger.log('Renderer ready.');\n\n            if (onReady) {\n                onReady(renderer);\n            }\n        },\n        [xml]\n    );\n\n    useKrpano({\n        target,\n        id,\n        xml: xml || null,\n        onready: onReadyCallback,\n    });\n\n    return (\n        <KrpanoRendererContext.Provider value={renderer}>\n            <CurrentSceneContext.Provider value={currentScene || null}>\n                <div id={target} className={className} style={className ? {} : { width: '100vw', height: '100vh' }}>\n                    {renderer ? children : null}\n                </div>\n            </CurrentSceneContext.Provider>\n        </KrpanoRendererContext.Provider>\n    );\n};\n\nexport default Krpano;\n","import React from 'react';\nimport { IKrpanoConfig } from '../types';\n\nexport const useKrpano = (config: IKrpanoConfig): void => {\n    React.useEffect(() => {\n        const defaultConfig: Partial<IKrpanoConfig> = {\n            html5: 'prefer',\n            xml: null,\n            consolelog: process.env.NODE_ENV === 'development',\n        };\n        const embedpano = () => {\n            if (typeof window.embedpano === 'function') window.embedpano(Object.assign({}, defaultConfig, config));\n        };\n\n        if (typeof window.embedpano === 'function') {\n            embedpano();\n        } else {\n            // TODO: install krpano\n            throw new Error('Krpano required');\n        }\n    }, [config.target, config.xml]);\n};\n","import React, { useContext } from 'react';\nimport { KrpanoRendererContext } from '../contexts/KrpanoRendererContext';\n\n/**\n * @see https://krpano.com/docu/xml/#view\n */\nexport interface ViewProps {\n    hlookat?: number;\n    vlookat?: number;\n    fov?: number;\n    fovMin?: number;\n    fovMax?: number;\n    camRoll?: number;\n    /**\n     * @see https://krpano.com/docu/xml/#view.fovtype\n     */\n    fovType?: 'VFOV' | 'HFOV' | 'DFOV' | 'MFOV' | 'SFOV';\n    maxPixelZoom?: number;\n    mFovRatio?: number;\n    distortion?: number;\n    distortionFovLink?: number;\n    stereographic?: boolean;\n    pannini?: number;\n    architectural?: number;\n    architecturalOnlyMiddle?: boolean;\n    /**\n     * @see https://krpano.com/docu/xml/#view.limitview\n     */\n    limitView?: 'off' | 'auto' | 'lookat' | 'range' | 'fullrange' | 'offrange';\n    hlookatMin?: number;\n    hlookatMax?: number;\n    vlookatMin?: number;\n    vlookatMax?: number;\n    rx?: number;\n    ry?: number;\n    tx?: number;\n    ty?: number;\n    tz?: number;\n    ox?: number;\n    oy?: number;\n    oz?: number;\n    children?: null;\n}\n\nexport const View: React.FC<ViewProps> = ({ children, ...viewAttrs }) => {\n    const renderer = useContext(KrpanoRendererContext);\n\n    React.useEffect(() => {\n        renderer?.setTag('view', null, { ...viewAttrs });\n    }, [viewAttrs]);\n\n    return <div className=\"view\">{children}</div>;\n};\n\nexport default View;\n","import React, { useContext } from 'react';\nimport { CurrentSceneContext } from '../contexts/CurrentSceneContext';\nimport { KrpanoRendererContext } from '../contexts/KrpanoRendererContext';\nimport { buildXML, Logger, XMLMeta } from '../utils';\n\nexport interface SceneImage {\n    type: string;\n    url: string;\n}\n\nexport interface SceneImageWithMultires {\n    type: string;\n    url: string;\n    // multires props\n    tiledImageWidth: number;\n    tiledImageHeight: number;\n    tileSize?: number;\n    asPreview?: boolean;\n}\n\nexport interface SceneProps {\n    name: string;\n    previewUrl?: string;\n    /** 直接指定scene的xml内容。指定后会忽略其他设置 */\n    content?: string;\n    /** image标签的附加属性，仅少部分情况用到 */\n    imageTagAttributes?: Record<string, string | number | boolean>;\n    /** Scene包含的图片。数组的长度大于1时按multires解析为多个level */\n    images?: [SceneImage] | SceneImageWithMultires[];\n}\n\nexport const Scene: React.FC<SceneProps> = ({\n    name,\n    previewUrl,\n    imageTagAttributes = {},\n    images = [],\n    content,\n    children,\n}) => {\n    const renderer = useContext(KrpanoRendererContext);\n    const currentScene = useContext(CurrentSceneContext);\n\n    React.useEffect(() => {\n        const contentImageMeta: XMLMeta = {\n            tag: 'image',\n            attrs: imageTagAttributes,\n            children: [],\n        };\n\n        // multires\n        if (images.length > 1) {\n            contentImageMeta.children!.push(\n                ...(images as SceneImageWithMultires[]).map(\n                    ({ tiledImageWidth, tiledImageHeight, tileSize, asPreview = false, type, ...img }) => {\n                        const imgXML: XMLMeta = {\n                            tag: 'level',\n                            // FIXME: tiledImageWidth等值使用者不一定会提供，需要进行检查、提示以及fallback\n                            attrs: {\n                                tiledImageWidth,\n                                tiledImageHeight,\n                                asPreview,\n                            },\n                            children: [\n                                {\n                                    tag: type,\n                                    attrs: { ...img },\n                                },\n                            ],\n                        };\n\n                        if (tileSize) {\n                            imgXML.attrs = Object.assign(imgXML.attrs, { tileSize });\n                        }\n\n                        return imgXML;\n                    }\n                )\n            );\n        } else if (images.length === 1) {\n            const { type, ...img } = images[0] as SceneImage;\n\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            contentImageMeta.children!.push({\n                tag: type,\n                attrs: { ...img },\n            });\n        }\n\n        renderer?.setTag('scene', name, {\n            content:\n                content ||\n                `${previewUrl ? `<preview url=\"${previewUrl}\" />` : ''}${\n                    images.length > 0 ? buildXML(contentImageMeta) : ''\n                }`,\n        });\n\n        return () => {\n            renderer?.removeScene(name);\n        };\n    }, [renderer, name, images, imageTagAttributes, content]);\n\n    React.useEffect(() => {\n        if (currentScene === name) {\n            renderer?.loadScene(name);\n            Logger.log(`Scene ${name} loaded due to currentScene change.`);\n        }\n    }, [name, renderer, currentScene]);\n\n    return <div className=\"scene\">{currentScene === name ? children : null}</div>;\n};\n\nexport default Scene;\n","import React, { useContext } from 'react';\nimport { KrpanoRendererContext } from '../contexts/KrpanoRendererContext';\nimport { EventCallback } from '../types';\nimport { Logger, mapEventPropsToJSCall, mapObject } from '../utils';\n\nexport interface ImageHotspotConfig {\n    name: string;\n    url?: string;\n    type?: string;\n    keep?: boolean;\n    visible?: boolean;\n    enabled?: boolean;\n    handCursor?: boolean;\n    cursor?: string;\n    maskChildren?: boolean;\n    zOrder?: string;\n    style?: string;\n    ath?: number;\n    atv?: number;\n    edge?: string;\n    zoom?: boolean;\n    distorted?: boolean;\n    rx?: number;\n    ry?: number;\n    rz?: number;\n    width?: string;\n    height?: string;\n    scale?: number;\n    rotate?: number;\n    alpha?: number;\n    onOver?: EventCallback;\n    onHover?: EventCallback;\n    onOut?: EventCallback;\n    onDown?: EventCallback;\n    onUp?: EventCallback;\n    onClick?: EventCallback;\n    onLoaded?: EventCallback;\n}\n\nexport interface HotspotProps extends ImageHotspotConfig {}\n\nexport const Hotspot: React.FC<HotspotProps> = ({ name, children, ...hotspotAttrs }) => {\n    const renderer = useContext(KrpanoRendererContext);\n    const EventSelector = `hotspot[${name}]`;\n\n    React.useEffect(() => {\n        const eventsObj = mapObject({ ...hotspotAttrs }, (key, value) => {\n            if (key.startsWith('on') && typeof value === 'function') {\n                return {\n                    [key]: value,\n                };\n            }\n            return {};\n        });\n        renderer?.bindEvents(EventSelector, eventsObj as any);\n\n        renderer?.addHotspot(name, {});\n\n        return () => {\n            renderer?.unbindEvents(EventSelector, eventsObj as any);\n            renderer?.removeHotspot(name);\n        };\n    }, []);\n\n    React.useEffect(() => {\n        renderer?.setTag(\n            'hotspot',\n            name,\n            Object.assign(\n                { ...hotspotAttrs },\n                mapEventPropsToJSCall({ ...hotspotAttrs }, key => `js(${renderer?.name}.fire(${key},${EventSelector}))`)\n            )\n        );\n        Logger.log(`hotspot ${name} updated due to attrs change`);\n    }, [renderer, name, hotspotAttrs, EventSelector]);\n\n    return <div className=\"hotspot\">{children}</div>;\n};\n\nexport default Hotspot;\n","import React from 'react';\nimport { KrpanoRendererContext } from '../contexts/KrpanoRendererContext';\nimport { EventCallback } from '../types';\nimport { mapEventPropsToJSCall } from '../utils';\n\nexport interface EventsConfig {\n    /** 事件名，若存在该参数则为局部事件 */\n    name?: string;\n    keep?: boolean;\n    onEnterFullscreen?: EventCallback;\n    onExitFullscreen?: EventCallback;\n    onXmlComplete?: EventCallback;\n    onPreviewComplete?: EventCallback;\n    onLoadComplete?: EventCallback;\n    onBlendComplete?: EventCallback;\n    onNewPano?: EventCallback;\n    onRemovePano?: EventCallback;\n    onNewScene?: EventCallback;\n    onXmlError?: EventCallback;\n    onLoadError?: EventCallback;\n    onKeydown?: EventCallback;\n    onKeyup?: EventCallback;\n    onClick?: EventCallback;\n    onSingleClick?: EventCallback;\n    onDoubleClick?: EventCallback;\n    onMousedown?: EventCallback;\n    onMouseup?: EventCallback;\n    onMousewheel?: EventCallback;\n    onContextmenu?: EventCallback;\n    onIdle?: EventCallback;\n    onViewChange?: EventCallback;\n    onViewChanged?: EventCallback;\n    onResize?: EventCallback;\n    onFrameBufferResize?: EventCallback;\n    onAutoRotateStart?: EventCallback;\n    onAutoRotateStop?: EventCallback;\n    onAutoRotateOneRound?: EventCallback;\n    onAutoRotateChange?: EventCallback;\n    onIPhoneFullscreen?: EventCallback;\n}\n\nexport interface EventsProps extends EventsConfig {}\n\nconst GlobalEvents = '__GlobalEvents';\n\nexport const Events: React.FC<EventsProps> = ({ name, keep, children, ...EventsAttrs }) => {\n    const renderer = React.useContext(KrpanoRendererContext);\n    const EventSelector = `events[${name || GlobalEvents}]`;\n\n    React.useEffect(() => {\n        renderer?.bindEvents(EventSelector, { ...EventsAttrs });\n\n        return () => {\n            renderer?.unbindEvents(EventSelector, { ...EventsAttrs });\n        };\n    }, [renderer, EventsAttrs, EventSelector]);\n\n    React.useEffect(() => {\n        renderer?.setTag(\n            'events',\n            // 全局事件直接设置\n            name || null,\n            mapEventPropsToJSCall({ ...EventsAttrs }, key => `js(${renderer.name}.fire(${key},${EventSelector}))`)\n        );\n    }, []);\n\n    return <div className=\"events\"></div>;\n};\n\nexport default Events;\n","import {\n  Hotspot,\n  HotspotProps,\n  Krpano,\n  KrpanoActionProxy,\n  Scene,\n  SceneProps,\n} from \"@0xllllh/react-krpano\";\nimport React from \"react\";\n\nimport \"./index.css\";\n\ninterface PageDynamicHotspotProps {}\n\nconst PageDynamicHotspot: React.FC<PageDynamicHotspotProps> = () => {\n  const [hotspots, setHotspots] = React.useState<HotspotProps[]>([]);\n  const [renderer, setRenderer] = React.useState<KrpanoActionProxy | null>(\n    null\n  );\n  const onAddHotspot = React.useCallback(() => {\n    setHotspots([\n      ...hotspots,\n      {\n        name: `hotspot${hotspots.length}`,\n        ath: renderer?.get(\"view.hlookat\") || 0,\n        atv: renderer?.get(\"view.vlookat\") || 0,\n        style: \"hotspot-style\",\n      },\n    ]);\n  }, [hotspots, renderer]);\n\n  return (\n    <div className=\"page-dynamic-hotspot\">\n      <Krpano\n        xml={`${process.env.PUBLIC_URL}/xml/dynamic-hotspot.xml`}\n        className=\"pano\"\n        currentScene=\"scene0\"\n        onReady={setRenderer}\n      >\n        <Scene\n          name=\"scene0\"\n          images={[\n            {\n              type: \"cube\",\n              url:\n                \"https://qhyxpicoss.kujiale.com/r/2017/09/01/L3D221IS3QKUQUQBOGAPEK3P3XU888_7500x1250.jpg_%s\",\n            },\n          ]}\n        >\n          {hotspots.map((hs) => (\n            <Hotspot key={hs.name} {...hs} />\n          ))}\n        </Scene>\n      </Krpano>\n      <div className=\"action-bar\">\n        <div className=\"action-button\" onClick={onAddHotspot}>\n          +\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PageDynamicHotspot;\n","import { Krpano } from \"@0xllllh/react-krpano\";\nimport React from \"react\";\n\ninterface PageLoadXMLProps {}\n\nconst PageLoadXML: React.FC<PageLoadXMLProps> = () => (\n  <Krpano className=\"pano\" xml={`${process.env.PUBLIC_URL}/xml/load-xml.xml`} />\n);\n\nexport default PageLoadXML;\n","import {\n  Hotspot,\n  Krpano,\n  Scene,\n  SceneProps,\n  View,\n} from \"@0xllllh/react-krpano\";\nimport React from \"react\";\n\nimport \"./index.css\";\n\ninterface PageMultiresProps {}\n\nconst SceneConfig: SceneProps[] = [\n  {\n    name: \"scene0\",\n    // 重要！必须提供tilesize\n    imageTagAttributes: {\n      tilesize: 256,\n      baseindex: 0,\n    },\n    images: [\n      {\n        type: \"cube\",\n        url:\n          \"https://qhrenderpicoss.kujiale.com/r/2020/11/08/L3D222S21ENDIK37RIAUI5L7ELUF3P3WO888.0_6000x1000.jpg_%s?x-oss-process=image/resize,w_256\",\n\n        tiledImageWidth: 256,\n        tiledImageHeight: 256,\n        asPreview: true,\n      },\n      {\n        type: \"cube\",\n        url:\n          \"https://qhrenderpicoss.kujiale.com/r/2020/11/08/L3D222S21ENDIK37RIAUI5L7ELUF3P3WO888.0_6000x1000.jpg_%s?x-oss-process=image/resize,w_512|image/indexcrop,x_256,i_%h|image/indexcrop,y_256,i_%v\",\n\n        tiledImageWidth: 512,\n        tiledImageHeight: 512,\n      },\n      {\n        type: \"cube\",\n        url:\n          \"https://qhrenderpicoss.kujiale.com/r/2020/11/08/L3D222S21ENDIK37RIAUI5L7ELUF3P3WO888.0_6000x1000.jpg_%s?x-oss-process=image/indexcrop,x_256,i_%h|image/indexcrop,y_256,i_%v\",\n\n        tiledImageWidth: 1200,\n        tiledImageHeight: 1200,\n      },\n    ],\n  },\n  {\n    name: \"scene1\",\n    images: [\n      {\n        type: \"cube\",\n        url:\n          \"https://qhyxpicoss.kujiale.com/r/2017/09/01/L3D221IS3QKUQUQBOGAPEK3P3XU888_7500x1250.jpg_%s\",\n      },\n    ],\n  },\n];\n\nconst PageMultires: React.FC<PageMultiresProps> = () => {\n  const [currentSceneIndex, setCurrentSceneIndex] = React.useState(0);\n\n  return (\n    <div className=\"page-switch-scene\">\n      <Krpano\n        className=\"pano\"\n        currentScene={SceneConfig[currentSceneIndex].name}\n      >\n        {SceneConfig.map((sc, idx) => (\n          <Scene key={sc.name} {...sc}>\n            <Hotspot\n              name=\"hotspot0\"\n              type=\"image\"\n              url=\"https://0xllllh.github.io/krpano-examples/images/hotspot.png\"\n              ath={0}\n              atv={0}\n              onClick={() => {\n                setCurrentSceneIndex((idx + 1) % SceneConfig.length);\n              }}\n            />\n            <View fov={90} fovMin={80} fovMax={120} />\n          </Scene>\n        ))}\n      </Krpano>\n    </div>\n  );\n};\n\nexport default PageMultires;\n","import { Krpano, Scene, SceneProps } from \"@0xllllh/react-krpano\";\nimport React from \"react\";\n\nimport \"./index.css\";\n\ninterface PageSwitchSceneProps {}\n\nconst SceneConfig: SceneProps[] = [\n  {\n    name: \"scene0\",\n    images: [\n      {\n        type: \"cube\",\n        url:\n          \"https://qhyxpicoss.kujiale.com/r/2017/09/01/L3D221IS3QKUQUQBOGAPEK3P3XU888_7500x1250.jpg_%s\",\n      },\n    ],\n  },\n  {\n    name: \"scene1\",\n    images: [\n      {\n        type: \"cube\",\n        url:\n          \"https://qhrenderpicoss.kujiale.com/r/2020/11/08/L3D222S21ENDIK37RIAUI5L7ELUF3P3WO888.0_6000x1000.jpg_%s\",\n      },\n    ],\n  },\n];\n\nconst PageSwitchScene: React.FC<PageSwitchSceneProps> = () => {\n  const [currentScene, setCurrentScene] = React.useState(SceneConfig[0].name);\n  const handleClick = React.useCallback(\n    (name: string) => () => setCurrentScene(name),\n    [setCurrentScene]\n  );\n\n  return (\n    <div className=\"page-switch-scene\">\n      <Krpano className=\"pano\" currentScene={currentScene}>\n        {SceneConfig.map((sc) => (\n          <Scene key={sc.name} {...sc} />\n        ))}\n      </Krpano>\n      <div className=\"scene-list\">\n        {SceneConfig.map((sc) => (\n          <div\n            key={sc.name}\n            className={`scene-list-item ${\n              sc.name === currentScene ? \"active\" : \"\"\n            }`}\n            onClick={handleClick(sc.name)}\n          >\n            <img\n              src={sc.previewUrl || sc.images![0].url.replace(\"%s\", \"f\")}\n              alt={sc.name}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PageSwitchScene;\n","import { Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Aside from \"./components/Aside\";\nimport { FlexItem, HStack, VStack } from \"./components/FlexContainer\";\nimport GithubCorner from \"./components/GithubCorner\";\nimport Header from \"./components/Header\";\nimport PageDynamicHotspot from \"./pages/DynamicHotspot\";\nimport PageLoadXML from \"./pages/LoadXML\";\nimport PageMultires from \"./pages/Multires\";\nimport PageSwitchScene from \"./pages/SwitchScene\";\n\nfunction App() {\n  return (\n    <VStack className=\"App\">\n      {/* <Header /> */}\n      <GithubCorner />\n      <HStack>\n        <Aside />\n        <FlexItem>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Redirect to=\"/load-xml\" />\n            </Route>\n            <Route path=\"/load-xml\">\n              <PageLoadXML />\n            </Route>\n            <Route path=\"/switch-scene\">\n              <PageSwitchScene />\n            </Route>\n            <Route path=\"/dynamic-hotspot\">\n              <PageDynamicHotspot />\n            </Route>\n            <Route path=\"/multires\">\n              <PageMultires />\n            </Route>\n          </Switch>\n        </FlexItem>\n      </HStack>\n    </VStack>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/FlexContainer/index.tsx","components/Aside/index.tsx","components/GithubCorner/index.tsx","pages/DynamicHotspot/index.tsx","pages/LoadXML/index.tsx","pages/Multires/index.tsx","pages/SwitchScene/index.tsx","pages/Redux/reducer.ts","pages/Redux/store.ts","pages/Redux/hooks.ts","pages/Redux/api.ts","pages/Redux/App.tsx","pages/Redux/index.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["HStack","className","justifyContent","children","style","VStack","FlexItem","flex","MenuItem","path","exact","match","useRouteMatch","to","Aside","React","window","innerWidth","collapsed","setCollapsed","onToggle","onClick","GithubCorner","href","target","aria-label","rel","viewBox","aria-hidden","d","fill","transformOrigin","PageDynamicHotspot","useState","hotspots","setHotspots","renderer","setRenderer","onAddHotspot","useCallback","name","length","ath","get","atv","xml","process","currentScene","onReady","images","type","url","map","hs","PageLoadXML","SceneConfig","imageTagAttributes","tilesize","baseindex","tiledImageWidth","tiledImageHeight","asPreview","PageMultires","currentSceneIndex","setCurrentSceneIndex","sc","idx","fov","fovMin","fovMax","PageSwitchScene","setCurrentScene","handleClick","enableLogger","src","previewUrl","replace","alt","loadPano","createAction","changeCurrentScene","addScene","addHotspot","panoReducer","createReducer","scenes","byId","default","hotspotIds","ids","builder","addCase","state","action","payload","store","configureStore","reducer","useAppSelector","useSelector","StorageKey","DefaultScene","DefaultState","count","ReduxApp","currentState","id","hotspotCount","hotspotById","dispatch","useDispatch","Promise","resolve","stateStr","localStorage","getItem","JSON","parse","e","then","pano","onSave","appState","setItem","stringify","alert","onAddScene","v4","Fragment","scene","PageRedux","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc8a3adf.chunk.js","sourcesContent":["import * as React from 'react';\nimport { CSSProperties } from 'react';\n\nimport './index.css';\n\ninterface FlexContainerProps {\n    className?: string;\n    justifyContent?: CSSProperties['justifyContent'];\n}\n\nexport const HStack: React.FC<FlexContainerProps> = ({ className = '', justifyContent, children }) => (\n    <div className={`flex-container h-stack ${className}`} style={{ justifyContent }}>\n        {children}\n    </div>\n);\n\nexport const VStack: React.FC<FlexContainerProps> = ({ className = '', justifyContent, children }) => (\n    <div className={`flex-container v-stack ${className}`} style={{ justifyContent }}>\n        {children}\n    </div>\n);\n\ninterface ItemProps {\n    flex?: CSSProperties['flex'];\n}\n\nexport const FlexItem: React.FC<ItemProps> = ({ flex, children }) => (\n    <div className=\"flex-item\" style={{ flex }}>\n        {children}\n    </div>\n);\n","import * as React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { FlexItem, VStack } from '../FlexContainer';\n\nimport './index.css';\n\ninterface MenuItemProps {\n    children: string;\n    path: string;\n    exact?: boolean;\n}\n\nconst MenuItem: React.FC<MenuItemProps> = ({ children, path, exact }) => {\n    const match = useRouteMatch({\n        path,\n        exact,\n    });\n\n    return (\n        <div className={`aside-menu-item ${match ? 'active' : ''}`}>\n            <Link className={`aside-menu-item-link`} to={path}>\n                {children}\n            </Link>\n        </div>\n    );\n};\n\nconst Aside: React.FC = () => {\n    const [collapsed, setCollapsed] = React.useState(window.innerWidth <= 750);\n    const onToggle = React.useCallback(() => {\n        setCollapsed(!collapsed);\n    }, [collapsed, setCollapsed]);\n\n    return (\n        <aside className={`app-aside ${collapsed ? 'collapsed' : ''}`}>\n            <VStack>\n                <div className=\"aside-title\">React Krpano Examples</div>\n                <VStack className=\"aside-menu\">\n                    <MenuItem path=\"/load-xml\">加载XML</MenuItem>\n                    <MenuItem path=\"/switch-scene\">切换场景</MenuItem>\n                    <MenuItem path=\"/multires\">多分辨率</MenuItem>\n                    <MenuItem path=\"/dynamic-hotspot\">动态热点</MenuItem>\n                    <MenuItem path=\"/redux\">Redux</MenuItem>\n                </VStack>\n                <div className=\"aside-toggle-bar\" onClick={onToggle}>\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </div>\n            </VStack>\n        </aside>\n    );\n};\n\nexport default Aside;\n","import * as React from 'react';\n\nimport './index.css';\n\ninterface GithubCornerProps {}\n\nconst GithubCorner: React.FC<GithubCornerProps> = () => (\n    <a\n        href=\"https://github.com/0xLLLLH/react-krpano-examples\"\n        target=\"_blank\"\n        className=\"github-corner\"\n        aria-label=\"View source on Github\"\n        rel=\"noreferrer\"\n    >\n        <svg viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n            <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n            <path\n                d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n                fill=\"currentColor\"\n                style={{ transformOrigin: '130px 106px' }}\n                className=\"octo-arm\"\n            ></path>\n            <path\n                d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n                fill=\"currentColor\"\n                className=\"octo-body\"\n            ></path>\n        </svg>\n    </a>\n);\n\nexport default GithubCorner;\n","import { Hotspot, HotspotProps, Krpano, KrpanoActionProxy, Scene, SceneProps } from '@0xllllh/react-krpano';\nimport React from 'react';\n\nimport './index.css';\n\ninterface PageDynamicHotspotProps {}\n\nconst PageDynamicHotspot: React.FC<PageDynamicHotspotProps> = () => {\n    const [hotspots, setHotspots] = React.useState<HotspotProps[]>([]);\n    const [renderer, setRenderer] = React.useState<KrpanoActionProxy | null>(null);\n    const onAddHotspot = React.useCallback(() => {\n        setHotspots([\n            ...hotspots,\n            {\n                name: `hotspot${hotspots.length}`,\n                ath: renderer?.get('view.hlookat') || 0,\n                atv: renderer?.get('view.vlookat') || 0,\n                style: 'hotspot-style',\n            },\n        ]);\n    }, [hotspots, renderer]);\n\n    return (\n        <div className=\"page-dynamic-hotspot\">\n            <Krpano\n                xml={`${process.env.PUBLIC_URL}/xml/dynamic-hotspot.xml`}\n                className=\"pano\"\n                currentScene=\"scene0\"\n                onReady={setRenderer}\n            >\n                <Scene\n                    name=\"scene0\"\n                    images={[\n                        {\n                            type: 'cube',\n                            url:\n                                'https://qhyxpicoss.kujiale.com/r/2017/09/01/L3D221IS3QKUQUQBOGAPEK3P3XU888_7500x1250.jpg_%s',\n                        },\n                    ]}\n                >\n                    {hotspots.map((hs) => (\n                        <Hotspot key={hs.name} {...hs} />\n                    ))}\n                </Scene>\n            </Krpano>\n            <div className=\"action-bar\">\n                <div className=\"action-button\" onClick={onAddHotspot}>\n                    +\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PageDynamicHotspot;\n","import { Krpano } from '@0xllllh/react-krpano';\nimport React from 'react';\n\ninterface PageLoadXMLProps {}\n\nconst PageLoadXML: React.FC<PageLoadXMLProps> = () => (\n    <Krpano className=\"pano\" xml={`${process.env.PUBLIC_URL}/xml/load-xml.xml`} />\n);\n\nexport default PageLoadXML;\n","import { Hotspot, Krpano, Scene, SceneProps, View } from '@0xllllh/react-krpano';\nimport React from 'react';\n\nimport './index.css';\n\ninterface PageMultiresProps {}\n\nconst SceneConfig: SceneProps[] = [\n    {\n        name: 'scene0',\n        // 重要！必须提供tilesize\n        imageTagAttributes: {\n            tilesize: 256,\n            baseindex: 0,\n        },\n        images: [\n            {\n                type: 'cube',\n                url:\n                    'https://qhrenderpicoss.kujiale.com/r/2020/11/08/L3D222S21ENDIK37RIAUI5L7ELUF3P3WO888.0_6000x1000.jpg_%s?x-oss-process=image/resize,w_256',\n\n                tiledImageWidth: 256,\n                tiledImageHeight: 256,\n                asPreview: true,\n            },\n            {\n                type: 'cube',\n                url:\n                    'https://qhrenderpicoss.kujiale.com/r/2020/11/08/L3D222S21ENDIK37RIAUI5L7ELUF3P3WO888.0_6000x1000.jpg_%s?x-oss-process=image/resize,w_512|image/indexcrop,x_256,i_%h|image/indexcrop,y_256,i_%v',\n\n                tiledImageWidth: 512,\n                tiledImageHeight: 512,\n            },\n            {\n                type: 'cube',\n                url:\n                    'https://qhrenderpicoss.kujiale.com/r/2020/11/08/L3D222S21ENDIK37RIAUI5L7ELUF3P3WO888.0_6000x1000.jpg_%s?x-oss-process=image/indexcrop,x_256,i_%h|image/indexcrop,y_256,i_%v',\n\n                tiledImageWidth: 1200,\n                tiledImageHeight: 1200,\n            },\n        ],\n    },\n    {\n        name: 'scene1',\n        images: [\n            {\n                type: 'cube',\n                url: 'https://qhyxpicoss.kujiale.com/r/2017/09/01/L3D221IS3QKUQUQBOGAPEK3P3XU888_7500x1250.jpg_%s',\n            },\n        ],\n    },\n];\n\nconst PageMultires: React.FC<PageMultiresProps> = () => {\n    const [currentSceneIndex, setCurrentSceneIndex] = React.useState(0);\n\n    return (\n        <div className=\"page-switch-scene\">\n            <Krpano className=\"pano\" currentScene={SceneConfig[currentSceneIndex].name}>\n                {SceneConfig.map((sc, idx) => (\n                    <Scene key={sc.name} {...sc}>\n                        <Hotspot\n                            name=\"hotspot0\"\n                            type=\"image\"\n                            url=\"https://0xllllh.github.io/krpano-examples/images/hotspot.png\"\n                            ath={0}\n                            atv={0}\n                            onClick={() => {\n                                setCurrentSceneIndex((idx + 1) % SceneConfig.length);\n                            }}\n                        />\n                        <View fov={90} fovMin={80} fovMax={120} />\n                    </Scene>\n                ))}\n            </Krpano>\n        </div>\n    );\n};\n\nexport default PageMultires;\n","import { Krpano, Scene, SceneProps } from '@0xllllh/react-krpano';\nimport React from 'react';\n\nimport './index.css';\n\ninterface PageSwitchSceneProps {}\n\nconst SceneConfig: SceneProps[] = [\n    {\n        name: 'scene0',\n        images: [\n            {\n                type: 'cube',\n                url: 'https://qhyxpicoss.kujiale.com/r/2017/09/01/L3D221IS3QKUQUQBOGAPEK3P3XU888_7500x1250.jpg_%s',\n            },\n        ],\n    },\n    {\n        name: 'scene1',\n        images: [\n            {\n                type: 'cube',\n                url:\n                    'https://qhrenderpicoss.kujiale.com/r/2020/11/08/L3D222S21ENDIK37RIAUI5L7ELUF3P3WO888.0_6000x1000.jpg_%s',\n            },\n        ],\n    },\n];\n\nconst PageSwitchScene: React.FC<PageSwitchSceneProps> = () => {\n    const [currentScene, setCurrentScene] = React.useState(SceneConfig[0].name);\n    const handleClick = React.useCallback((name: string) => () => setCurrentScene(name), [setCurrentScene]);\n\n    return (\n        <div className=\"page-switch-scene\">\n            <Krpano className=\"pano\" currentScene={currentScene} enableLogger={true}>\n                {SceneConfig.map((sc) => (\n                    <Scene key={sc.name} {...sc} />\n                ))}\n            </Krpano>\n            <div className=\"scene-list\">\n                {SceneConfig.map((sc) => (\n                    <div\n                        key={sc.name}\n                        className={`scene-list-item ${sc.name === currentScene ? 'active' : ''}`}\n                        onClick={handleClick(sc.name)}\n                    >\n                        <img src={sc.previewUrl || sc.images![0].url.replace('%s', 'f')} alt={sc.name} />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default PageSwitchScene;\n","import { createAction, createReducer } from '@reduxjs/toolkit';\nimport { PanoState, Scene, Hotspot } from './types';\n\nexport const loadPano = createAction<PanoState>('pano/loadPano');\nexport const changeCurrentScene = createAction<string>('pano/changeCurrentScene');\nexport const addScene = createAction<Scene>('pano/addScene');\nexport const addHotspot = createAction<Hotspot>('pano/addHotspot');\n\nconst initialState: PanoState = {\n    currentScene: 'default',\n    scenes: {\n        byId: {\n            default: {\n                name: 'default',\n\n                hotspotIds: [],\n                images: [\n                    {\n                        type: 'cube',\n                        url:\n                            'https://qhyxpicoss.kujiale.com/r/2017/09/01/L3D221IS3QKUQUQBOGAPEK3P3XU888_7500x1250.jpg_%s',\n                    },\n                ],\n            },\n        },\n        ids: ['default'],\n    },\n    hotspots: {\n        byId: {},\n        ids: [],\n    },\n};\n\nconst panoReducer = createReducer(initialState, (builder) => {\n    builder\n        .addCase(loadPano, (state, action) => {\n            state.currentScene = action.payload.currentScene;\n            state.scenes = action.payload.scenes;\n            state.hotspots = action.payload.hotspots;\n        })\n        .addCase(changeCurrentScene, (state, action) => {\n            state.currentScene = action.payload;\n        })\n        .addCase(addScene, (state, action) => {\n            const { name } = action.payload;\n            state.scenes.byId[name] = action.payload;\n            state.scenes.ids = [...state.scenes.ids, name];\n        })\n        .addCase(addHotspot, (state, action) => {\n            const { name } = action.payload;\n            state.hotspots.byId[name] = action.payload;\n            state.hotspots.ids = [...state.hotspots.ids, name];\n            state.scenes.byId[state.currentScene].hotspotIds = [\n                ...state.scenes.byId[state.currentScene].hotspotIds,\n                name,\n            ];\n        });\n});\n\nexport default panoReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport panoReducer from './reducer';\n\nexport const store = configureStore({\n    reducer: panoReducer,\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { v4 } from 'uuid';\n\nimport { PanoState, Scene } from './types';\n\nconst StorageKey = 'PanoState';\nconst DefaultScene: Scene = {\n    name: 'default',\n    images: [\n        {\n            type: 'cube',\n            url: 'https://qhyxpicoss.kujiale.com/r/2017/09/01/L3D221IS3QKUQUQBOGAPEK3P3XU888_7500x1250.jpg_%s',\n        },\n    ],\n    hotspotIds: [],\n};\nconst DefaultState: PanoState = {\n    currentScene: 'default',\n    scenes: {\n        byId: {\n            default: DefaultScene,\n        },\n        ids: [DefaultScene.name],\n    },\n    hotspots: {\n        byId: {},\n        ids: [],\n    },\n};\nexport const getPanoState = (): Promise<PanoState> => {\n    return new Promise((resolve) => {\n        const stateStr = localStorage.getItem(StorageKey);\n        if (stateStr === null) {\n            resolve(DefaultState);\n        } else {\n            try {\n                const state = JSON.parse(stateStr);\n                resolve(state);\n            } catch (e) {\n                resolve(DefaultState);\n            }\n        }\n    });\n};\n\nexport const savePanoState = (appState: PanoState): Promise<void> => {\n    return new Promise((resolve) => {\n        localStorage.setItem(StorageKey, JSON.stringify(appState));\n        resolve();\n    });\n};\n\nlet count = 0;\nexport const generateNewScene = (): Promise<Scene> => {\n    count++;\n    return Promise.resolve({\n        ...DefaultScene,\n        name: `sc${v4()}`,\n        images: [\n            {\n                type: 'cube',\n                url:\n                    count % 2 === 0\n                        ? 'https://qhyxpicoss.kujiale.com/r/2017/09/01/L3D221IS3QKUQUQBOGAPEK3P3XU888_7500x1250.jpg_%s'\n                        : 'https://qhrenderpicoss.kujiale.com/r/2020/11/08/L3D222S21ENDIK37RIAUI5L7ELUF3P3WO888.0_6000x1000.jpg_%s',\n            },\n        ],\n    });\n};\n","import { Hotspot, Krpano, KrpanoActionProxy, Scene } from '@0xllllh/react-krpano';\nimport React from 'react';\n\nimport { useAppDispatch, useAppSelector } from './hooks';\nimport { loadPano, addHotspot, changeCurrentScene, addScene } from './reducer';\nimport * as api from './api';\n\ninterface ReduxAppProps {}\n\nconst ReduxApp: React.FC<ReduxAppProps> = () => {\n    const currentState = useAppSelector((state) => state);\n    const currentScene = useAppSelector((state) => state.currentScene);\n    const scenes = useAppSelector((state) => state.scenes.ids.map((id) => state.scenes.byId[id]));\n    const hotspotCount = useAppSelector((state) => state.hotspots.ids.length);\n    const hotspotById = useAppSelector((state) => state.hotspots.byId);\n    const dispatch = useAppDispatch();\n    const [renderer, setRenderer] = React.useState<KrpanoActionProxy | null>(null);\n\n    const onReady = React.useCallback((renderer: KrpanoActionProxy) => {\n        setRenderer(renderer);\n        api.getPanoState().then((pano) => {\n            dispatch(loadPano(pano));\n        });\n    }, []);\n    const onAddHotspot = React.useCallback(() => {\n        dispatch(\n            addHotspot({\n                name: `hotspot${hotspotCount + 1}`,\n                ath: renderer?.get('view.hlookat') || 0,\n                atv: renderer?.get('view.vlookat') || 0,\n                style: 'hotspot-style',\n            }),\n        );\n    }, [renderer, hotspotCount]);\n    const onSave = React.useCallback(() => {\n        api.savePanoState(currentState).then(() => {\n            window.alert('pano saved');\n        });\n    }, [currentState]);\n    const handleChangeScene = (name: string) => () => dispatch(changeCurrentScene(name));\n    const onAddScene = React.useCallback(() => {\n        api.generateNewScene().then((sc) => {\n            dispatch(addScene(sc));\n            alert('new scene added');\n        });\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Krpano\n                xml={`${process.env.PUBLIC_URL}/xml/dynamic-hotspot.xml`}\n                className=\"pano\"\n                currentScene={currentScene}\n                onReady={onReady}\n                enableLogger={true}\n            >\n                {scenes.map((scene) => (\n                    <Scene key={scene.name} {...scene}>\n                        {scene.hotspotIds\n                            .map((name) => hotspotById[name])\n                            .map((hs) => (\n                                <Hotspot key={hs.name} {...hs} />\n                            ))}\n                    </Scene>\n                ))}\n            </Krpano>\n            <div className=\"action-bar\">\n                <div className=\"action-button\" onClick={onAddHotspot}>\n                    +\n                </div>\n                <div className=\"action-button\" onClick={onSave}>\n                    📥\n                </div>\n            </div>\n\n            <div className=\"scene-list\">\n                {scenes.map((sc) => (\n                    <div\n                        key={sc.name}\n                        className={`scene-list-item ${sc.name === currentScene ? 'active' : ''}`}\n                        onClick={handleChangeScene(sc.name)}\n                    >\n                        <img src={sc.previewUrl || sc.images![0].url.replace('%s', 'f')} alt={sc.name} />\n                    </div>\n                ))}\n                <div className=\"scene-list-item scene-list-item--add\" onClick={onAddScene}>\n                    +\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default ReduxApp;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nimport ReduxApp from './App';\n\nimport './index.css';\n\nconst PageRedux: React.FC = () => (\n    <div className=\"page-redux\">\n        <Provider store={store}>\n            <ReduxApp />\n        </Provider>\n    </div>\n);\n\nexport default PageRedux;\n","import React from 'react';\nimport { Switch, Route, Link, Redirect } from 'react-router-dom';\nimport './App.css';\nimport Aside from './components/Aside';\nimport { FlexItem, HStack, VStack } from './components/FlexContainer';\nimport GithubCorner from './components/GithubCorner';\nimport Header from './components/Header';\nimport PageDynamicHotspot from './pages/DynamicHotspot';\nimport PageLoadXML from './pages/LoadXML';\nimport PageMultires from './pages/Multires';\nimport PageSwitchScene from './pages/SwitchScene';\nimport PageRedux from './pages/Redux';\n\nfunction App() {\n    return (\n        <VStack className=\"App\">\n            {/* <Header /> */}\n            <GithubCorner />\n            <HStack>\n                <Aside />\n                <FlexItem>\n                    <Switch>\n                        <Route path=\"/\" exact>\n                            <Redirect to=\"/load-xml\" />\n                        </Route>\n                        <Route path=\"/load-xml\">\n                            <PageLoadXML />\n                        </Route>\n                        <Route path=\"/switch-scene\">\n                            <PageSwitchScene />\n                        </Route>\n                        <Route path=\"/dynamic-hotspot\">\n                            <PageDynamicHotspot />\n                        </Route>\n                        <Route path=\"/multires\">\n                            <PageMultires />\n                        </Route>\n                        <Route path=\"/redux\">\n                            <PageRedux />\n                        </Route>\n                    </Switch>\n                </FlexItem>\n            </HStack>\n        </VStack>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/FlexContainer/index.tsx","components/Aside/index.tsx","components/GithubCorner/index.tsx","pages/DynamicHotspot/index.tsx","pages/LoadXML/index.tsx","pages/Multires/index.tsx","pages/SwitchScene/index.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["HStack","className","justifyContent","children","style","VStack","FlexItem","flex","MenuItem","path","exact","match","useRouteMatch","to","Aside","React","window","innerWidth","collapsed","setCollapsed","onToggle","onClick","GithubCorner","href","target","aria-label","viewBox","aria-hidden","d","fill","transformOrigin","PageDynamicHotspot","useState","hotspots","setHotspots","renderer","setRenderer","onAddHotspot","useCallback","name","length","ath","get","atv","xml","process","currentScene","onReady","images","type","url","map","hs","PageLoadXML","SceneConfig","imageTagAttributes","tilesize","baseindex","tiledImageWidth","tiledImageHeight","asPreview","PageMultires","currentSceneIndex","setCurrentSceneIndex","sc","idx","fov","fovMin","fovMax","PageSwitchScene","setCurrentScene","handleClick","enableLogger","src","previewUrl","replace","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.ce7ba9d4.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { CSSProperties } from \"react\";\n\nimport \"./index.css\";\n\ninterface FlexContainerProps {\n  className?: string;\n  justifyContent?: CSSProperties[\"justifyContent\"];\n}\n\nexport const HStack: React.FC<FlexContainerProps> = ({\n  className = \"\",\n  justifyContent,\n  children,\n}) => (\n  <div\n    className={`flex-container h-stack ${className}`}\n    style={{ justifyContent }}\n  >\n    {children}\n  </div>\n);\n\nexport const VStack: React.FC<FlexContainerProps> = ({\n  className = \"\",\n  justifyContent,\n  children,\n}) => (\n  <div\n    className={`flex-container v-stack ${className}`}\n    style={{ justifyContent }}\n  >\n    {children}\n  </div>\n);\n\ninterface ItemProps {\n  flex?: CSSProperties[\"flex\"];\n}\n\nexport const FlexItem: React.FC<ItemProps> = ({ flex, children }) => (\n  <div className=\"flex-item\" style={{ flex }}>\n    {children}\n  </div>\n);\n","import * as React from \"react\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport { FlexItem, VStack } from \"../FlexContainer\";\n\nimport \"./index.css\";\n\nconst MenuItem: React.FC<{\n  children: string;\n  path: string;\n  exact?: boolean;\n}> = ({ children, path, exact }) => {\n  let match = useRouteMatch({\n    path,\n    exact,\n  });\n\n  return (\n    <div className={`aside-menu-item ${match ? \"active\" : \"\"}`}>\n      <Link className={`aside-menu-item-link`} to={path}>\n        {children}\n      </Link>\n    </div>\n  );\n};\n\nconst Aside: React.FC<{}> = () => {\n  const [collapsed, setCollapsed] = React.useState(window.innerWidth <= 750);\n  const onToggle = React.useCallback(() => {\n    setCollapsed(!collapsed);\n  }, [collapsed, setCollapsed]);\n\n  return (\n    <aside className={`app-aside ${collapsed ? \"collapsed\" : \"\"}`}>\n      <VStack>\n        <div className=\"aside-title\">React Krpano Examples</div>\n        <VStack className=\"aside-menu\">\n          <MenuItem path=\"/load-xml\">加载XML</MenuItem>\n          <MenuItem path=\"/switch-scene\">切换场景</MenuItem>\n          <MenuItem path=\"/multires\">多分辨率</MenuItem>\n          <MenuItem path=\"/dynamic-hotspot\">动态热点</MenuItem>\n        </VStack>\n        <div className=\"aside-toggle-bar\" onClick={onToggle}>\n          <span></span>\n          <span></span>\n          <span></span>\n        </div>\n      </VStack>\n    </aside>\n  );\n};\n\nexport default Aside;\n","import * as React from \"react\";\n\nimport \"./index.css\";\n\ninterface GithubCornerProps {}\n\nconst GithubCorner: React.FC<GithubCornerProps> = () => (\n  <a\n    href=\"https://github.com/0xLLLLH/react-krpano-examples\"\n    target=\"_blank\"\n    className=\"github-corner\"\n    aria-label=\"View source on Github\"\n  >\n    <svg viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n      <path\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n        fill=\"currentColor\"\n        style={{ transformOrigin: \"130px 106px\" }}\n        className=\"octo-arm\"\n      ></path>\n      <path\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n        fill=\"currentColor\"\n        className=\"octo-body\"\n      ></path>\n    </svg>\n  </a>\n);\n\nexport default GithubCorner;\n","import {\n  Hotspot,\n  HotspotProps,\n  Krpano,\n  KrpanoActionProxy,\n  Scene,\n  SceneProps,\n} from \"@0xllllh/react-krpano\";\nimport React from \"react\";\n\nimport \"./index.css\";\n\ninterface PageDynamicHotspotProps {}\n\nconst PageDynamicHotspot: React.FC<PageDynamicHotspotProps> = () => {\n  const [hotspots, setHotspots] = React.useState<HotspotProps[]>([]);\n  const [renderer, setRenderer] = React.useState<KrpanoActionProxy | null>(\n    null\n  );\n  const onAddHotspot = React.useCallback(() => {\n    setHotspots([\n      ...hotspots,\n      {\n        name: `hotspot${hotspots.length}`,\n        ath: renderer?.get(\"view.hlookat\") || 0,\n        atv: renderer?.get(\"view.vlookat\") || 0,\n        style: \"hotspot-style\",\n      },\n    ]);\n  }, [hotspots, renderer]);\n\n  return (\n    <div className=\"page-dynamic-hotspot\">\n      <Krpano\n        xml={`${process.env.PUBLIC_URL}/xml/dynamic-hotspot.xml`}\n        className=\"pano\"\n        currentScene=\"scene0\"\n        onReady={setRenderer}\n      >\n        <Scene\n          name=\"scene0\"\n          images={[\n            {\n              type: \"cube\",\n              url:\n                \"https://qhyxpicoss.kujiale.com/r/2017/09/01/L3D221IS3QKUQUQBOGAPEK3P3XU888_7500x1250.jpg_%s\",\n            },\n          ]}\n        >\n          {hotspots.map((hs) => (\n            <Hotspot key={hs.name} {...hs} />\n          ))}\n        </Scene>\n      </Krpano>\n      <div className=\"action-bar\">\n        <div className=\"action-button\" onClick={onAddHotspot}>\n          +\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PageDynamicHotspot;\n","import { Krpano } from \"@0xllllh/react-krpano\";\nimport React from \"react\";\n\ninterface PageLoadXMLProps {}\n\nconst PageLoadXML: React.FC<PageLoadXMLProps> = () => (\n  <Krpano className=\"pano\" xml={`${process.env.PUBLIC_URL}/xml/load-xml.xml`} />\n);\n\nexport default PageLoadXML;\n","import {\n  Hotspot,\n  Krpano,\n  Scene,\n  SceneProps,\n  View,\n} from \"@0xllllh/react-krpano\";\nimport React from \"react\";\n\nimport \"./index.css\";\n\ninterface PageMultiresProps {}\n\nconst SceneConfig: SceneProps[] = [\n  {\n    name: \"scene0\",\n    // 重要！必须提供tilesize\n    imageTagAttributes: {\n      tilesize: 256,\n      baseindex: 0,\n    },\n    images: [\n      {\n        type: \"cube\",\n        url:\n          \"https://qhrenderpicoss.kujiale.com/r/2020/11/08/L3D222S21ENDIK37RIAUI5L7ELUF3P3WO888.0_6000x1000.jpg_%s?x-oss-process=image/resize,w_256\",\n\n        tiledImageWidth: 256,\n        tiledImageHeight: 256,\n        asPreview: true,\n      },\n      {\n        type: \"cube\",\n        url:\n          \"https://qhrenderpicoss.kujiale.com/r/2020/11/08/L3D222S21ENDIK37RIAUI5L7ELUF3P3WO888.0_6000x1000.jpg_%s?x-oss-process=image/resize,w_512|image/indexcrop,x_256,i_%h|image/indexcrop,y_256,i_%v\",\n\n        tiledImageWidth: 512,\n        tiledImageHeight: 512,\n      },\n      {\n        type: \"cube\",\n        url:\n          \"https://qhrenderpicoss.kujiale.com/r/2020/11/08/L3D222S21ENDIK37RIAUI5L7ELUF3P3WO888.0_6000x1000.jpg_%s?x-oss-process=image/indexcrop,x_256,i_%h|image/indexcrop,y_256,i_%v\",\n\n        tiledImageWidth: 1200,\n        tiledImageHeight: 1200,\n      },\n    ],\n  },\n  {\n    name: \"scene1\",\n    images: [\n      {\n        type: \"cube\",\n        url:\n          \"https://qhyxpicoss.kujiale.com/r/2017/09/01/L3D221IS3QKUQUQBOGAPEK3P3XU888_7500x1250.jpg_%s\",\n      },\n    ],\n  },\n];\n\nconst PageMultires: React.FC<PageMultiresProps> = () => {\n  const [currentSceneIndex, setCurrentSceneIndex] = React.useState(0);\n\n  return (\n    <div className=\"page-switch-scene\">\n      <Krpano\n        className=\"pano\"\n        currentScene={SceneConfig[currentSceneIndex].name}\n      >\n        {SceneConfig.map((sc, idx) => (\n          <Scene key={sc.name} {...sc}>\n            <Hotspot\n              name=\"hotspot0\"\n              type=\"image\"\n              url=\"https://0xllllh.github.io/krpano-examples/images/hotspot.png\"\n              ath={0}\n              atv={0}\n              onClick={() => {\n                setCurrentSceneIndex((idx + 1) % SceneConfig.length);\n              }}\n            />\n            <View fov={90} fovMin={80} fovMax={120} />\n          </Scene>\n        ))}\n      </Krpano>\n    </div>\n  );\n};\n\nexport default PageMultires;\n","import { Krpano, Scene, SceneProps } from \"@0xllllh/react-krpano\";\nimport React from \"react\";\n\nimport \"./index.css\";\n\ninterface PageSwitchSceneProps {}\n\nconst SceneConfig: SceneProps[] = [\n  {\n    name: \"scene0\",\n    images: [\n      {\n        type: \"cube\",\n        url:\n          \"https://qhyxpicoss.kujiale.com/r/2017/09/01/L3D221IS3QKUQUQBOGAPEK3P3XU888_7500x1250.jpg_%s\",\n      },\n    ],\n  },\n  {\n    name: \"scene1\",\n    images: [\n      {\n        type: \"cube\",\n        url:\n          \"https://qhrenderpicoss.kujiale.com/r/2020/11/08/L3D222S21ENDIK37RIAUI5L7ELUF3P3WO888.0_6000x1000.jpg_%s\",\n      },\n    ],\n  },\n];\n\nconst PageSwitchScene: React.FC<PageSwitchSceneProps> = () => {\n  const [currentScene, setCurrentScene] = React.useState(SceneConfig[0].name);\n  const handleClick = React.useCallback(\n    (name: string) => () => setCurrentScene(name),\n    [setCurrentScene]\n  );\n\n  return (\n    <div className=\"page-switch-scene\">\n      <Krpano className=\"pano\" currentScene={currentScene} enableLogger={true}>\n        {SceneConfig.map((sc) => (\n          <Scene key={sc.name} {...sc} />\n        ))}\n      </Krpano>\n      <div className=\"scene-list\">\n        {SceneConfig.map((sc) => (\n          <div\n            key={sc.name}\n            className={`scene-list-item ${\n              sc.name === currentScene ? \"active\" : \"\"\n            }`}\n            onClick={handleClick(sc.name)}\n          >\n            <img\n              src={sc.previewUrl || sc.images![0].url.replace(\"%s\", \"f\")}\n              alt={sc.name}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PageSwitchScene;\n","import { Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Aside from \"./components/Aside\";\nimport { FlexItem, HStack, VStack } from \"./components/FlexContainer\";\nimport GithubCorner from \"./components/GithubCorner\";\nimport Header from \"./components/Header\";\nimport PageDynamicHotspot from \"./pages/DynamicHotspot\";\nimport PageLoadXML from \"./pages/LoadXML\";\nimport PageMultires from \"./pages/Multires\";\nimport PageSwitchScene from \"./pages/SwitchScene\";\n\nfunction App() {\n  return (\n    <VStack className=\"App\">\n      {/* <Header /> */}\n      <GithubCorner />\n      <HStack>\n        <Aside />\n        <FlexItem>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Redirect to=\"/load-xml\" />\n            </Route>\n            <Route path=\"/load-xml\">\n              <PageLoadXML />\n            </Route>\n            <Route path=\"/switch-scene\">\n              <PageSwitchScene />\n            </Route>\n            <Route path=\"/dynamic-hotspot\">\n              <PageDynamicHotspot />\n            </Route>\n            <Route path=\"/multires\">\n              <PageMultires />\n            </Route>\n          </Switch>\n        </FlexItem>\n      </HStack>\n    </VStack>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}